//
//  SHAPE-MAP.cpp
//  SHAPE-MAP
//
//  Created by Hua Li on 5/18/17.
//  Copyright Â© 2017 Hua Li. All rights reserved.
//

#include "SHAPE-SEQ.hpp"
using namespace std;
string Folder = "/Users/huali/Desktop/Codes/Fluoride_riboswitch/";
string RNAname = "FLUORIDE_CO_76nt_F";//Format: FLUORIDE_CO/EQ_LENGTH_F/NF  //change

//Kyle's parameters

int St = 2; //from 3'start 0
int Ed = 75; //from 3' start 0,End position is 77, due to Kyle's data problem. //change 0-77+complete. remove first 2, SHAPE is 2~77+complete //change
int RNALen = 76;//length of Fold //change
int RNALenNNLS = Ed-St+1+1;//+1 for calculating length, +1 for complete reads.length of response

int AddFold = 0;//number of pseudoknot structures spike in. len<55-14, ADDFold = 0; 55-14=<len<=75-14, ADDFold=3; len>=76-14, ADDFold=6 //change

int basicFoldNums = 1000; //change

int main(int argc, const char * argv[]) {
    ofstream myfilew;
    ifstream myfile;
    
    //Order: complete seq, 5' to 3'
    vector<int>SEQPlusReads=
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////    WILD TYPE DATA   ////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    
    
    //FLUORIDE_CO_26nt_NF 40-14=26, 25 = 24nt+1complete
    //{2907,778,277,189,100,18,3,3,6,50,18,6,48,101,2,59,105,2,0,14,8,38,48,8,17};
    
    //FLUORIDE_CO_26nt_F 40-14=26
    //{3158,921,317,333,131,15,17,2,3,50,45,4,51,118,2,50,99,4,4,17,11,53,103,8,24};
    
    
    
    //FLUORIDE_CO_55nt_NF
    //{4391,	1363,	381,	328,	177,	33,	18,	6,	12,	108,	93,	21,	69,	213,	16,	77,	134,	4,	4,	37,	19,	140,	459,	38,	149,	133,	37,	74,	9,	60,	136,	11,	24,	57,	282,	15,	18,	73,	34,	87,	5,	3,	18,	0,	5,	2,	0,	3,	15,	15,	26,	20,	17,	40};
    //FLUORIDE_CO_55nt_F
    //{3919,	1255,	362,	487,	225,	28,	27,	6,	10,	72,	62,	9,	50,	116,	5,	32,	80,	0,	4,	34,	21,	121,	457,	37,	79,	74,	23,	81,	8,	67,	144,	11,	27,	36,	228,	13,	10,	46,	32,	52,	8,	0,	14,	1,	2,	3,	0,	1,	10,	6,	6,	8,	22,	55};
    
    //FLUORIDE_CO_56nt_NF
    //{	4835,	1509,	415,	394,	206,	38,	20,	3,	13,	87,	57,	24,	89,	220,	22,	72,	153,	4,	8,	34,	33,	159,	486,	43,	140,	115,	18,	76,	10,	31,	104,	12,	27,	53,	183,	12,	11,	50,	40,	90,	2,	3,	12,	0,	2,	5,	0,	7,	19,	27,	13,	13,	30,	59,	121};
    //FLUORIDE_CO_56nt_F
    //{3555,	1175,	308,	435,	239,	23,	24,	5,	13,	73,	31,	9,	37,	97,	7,	43,	51,	0,	7,	24,	7,	80,	483,	31,	80,	58,	14,	54,	9,	30,	82,	9,	19,	48,	195,	7,	3,	43,	24,	36,	5,	1,	4,	2,	1,	0,	0,	1,	6,	12,	17,	19,	24,	56,	131};
    
    //FLUORIDE_CO_57nt_NF
   //{3697,	1038,	299,	258,	127,	21,	12,	3,	4,	73,	50,	17,	49,	197,	6,	62,	114,	7,	4,	20,	21,	100,	295,	22,	80,	63,	9,	29,	6,	22,	34,	1,	9,	16,	69,	4,	4,	20,	18,	20,	1,	0,	1,	0,	3,	0,	1,	4,	12,	10,	15,	20,	31,	73,	132,	88};
    //FLUORIDE_CO_57nt_F
    //{2620,	891,	193,	285,	154,	19,	5,	3,	3,	39,	39,	2,	31,	52,	3,	22,	26,	0,	3,	15,	9,	71,	258,	17,	34,	40,	7,	43,	2,	15,	34,	6,	10,	18,	81,	2,	4,	22,	11,	19,	1,	0,	2,	0,	2,	1,	0,	3,	12,	10,	10,	20,	28,	64,	139,	69};
    
    //FLUORIDE_CO_58nt_NF
    //{4329,	1299,	352,	329,	192,	31,	22,	4,	9,	81,	55,	19,	72,	150,	6,	52,	120,	1,	4,	17,	20,	95,	346,	31,	74,	96,	22,	31,	4,	19,	62,	6,	13,	23,	67,	4,	2,	19,	9,	18,	1,	1,	8,	0,	9,	4,	4,	11,	65,	50,	51,	54,	85,	120,	423,	292,	89};
    //FLUORIDE_CO_58nt_F
    //{3325,	1311,	297,	549,	262,	37,	16,	3,	8,	55,	67,	4,	35,	105,	2,	42,	59,	2,	7,	29,	23,	98,	428,	43,	114,	262,	16,	40,	5,	26,	44,	3,	23,	27,	111,	1,	1,	10,	12,	5,	1,	1,	3,	0,	9,	7,	6,	11,	34,	24,	34,	69,	109,	121,	461,	258,	116};
    
    //FLUORIDE_CO_59nt_NF
    //{5614,	1912,	466,	367,	204,	44,	18,	2,	14,	109,	68,	14,	116,	416,	21,	123,	158,	5,	11,	36,	16,	144,	348,	34,	151,	120,	41,	106,	6,	60,	114,	12,	25,	36,	133,	9,	9,	49,	25,	47,	4,	2,	3,	0,	6,	1,	2,	14,	24,	12,	16,	17,	28,	33,	160,	119,	58,	171};
    //FLUORIDE_CO_59nt_F
    //{2341,	879,	182,	353,	176,	16,	9,	1,	6,	34,	20,	6,	29,	92,	4,	22,	38,	1,	6,	16,	10,	54,	283,	23,	30,	41,	8,	37,	3,	13,	47,	7,	10,	37,	102,	6,	1,	48,	15,	12,	1,	0,	3,	0,	3,	2,	0,	5,	22,	10,	15,	20,	32,	36,	164,	87,	39,	125	};
    
    //FLUORIDE_CO_60nt_NF
    //{10561,	3392,	876,	747,	480,	67,	54,	9,	24,	181,	131,	25,	128,	410,	20,	126,	221,	5,	9,	43,	38,	275,	885,	82,	241,	222,	46,	144,	11,	64,	151,	14,	38,	81,	248,	14,	10,	81,	46,	45,	2,	3,	16,	1,	14,	2,	3,	17,	69,	50,	69,	104,	126,	136,	533,	297,	113,	225,	2	};
    //FLUORIDE_CO_60nt_F
    //{7323,	2637,	618,	992,	461,	65,	35,	6,	16,	130,	89,	10,	78,	206,	13,	49,	60,	5,	13,	46,	40,	167,	806,	61,	95,	117,	31,	92,	1,	43,	109,	12,	35,	62,	283,	9,	6,	60,	24,	25,	2,	4,	5,	0,	19,	8,	5,	12,	35,	20,	32,	63,	105,	140,	402,	204,	132,	263,	4	};
    
    //FLUORIDE_CO_61nt_NF
    //{5898,	1895,	446,	439,	242,	45,	29,	1,	4,	116,	68,	26,	75,	237,	16,	84,	167,	4,	9,	26,	19,	160,	551,	34,	151,	135,	30,	78,	8,	42,	69,	6,	31,	56,	175,	11,	3,	47,	26,	34,	2,	3,	5,	0,	8,	3,	2,	20,	77,	15,	39,	41,	77,	112,	429,	225,	89,	210,	2,	68};
    //FLUORIDE_CO_61nt_F
    //{5369,	1823,	478,	641,	300,	40,	16,	7,	11,	89,	71,	7,	50,	144,	11,	48,	83,	2,	7,	24,	15,	155,	656,	54,	108,	82,	18,	55,	8,	23,	83,	10,	30,	65,	212,	12,	9,	37,	16,	16,	0,	0,	1,	1,	7,	1,	1,	9,	29,	11,	23,	56,	86,	150,	489,	265,	139,	327,	1,	95};
    
    //FLUORIDE_CO_62nt_NF
    //{4742,	1446,	381,	329,	203,	40,	22,	5,	11,	88,	72,	17,	62,	193,	17,	76,	135,	4,	3,	28,	26,	129,	418,	38,	141,	102,	20,	63,	5,	34,	71,	3,	31,	41,	172,	9,	8,	31,	21,	26,	2,	0,	11,	0,	25,	3,	5,	25,	120,	22,	34,	43,	78,	110,	444,	274,	117,	201,	2,	71,	50};
    //FLUORIDE_CO_62nt_F
    //{3887,	1251,	294,	471,	252,	28,	10,	5,	7,	65,	62,	1,	32,	93,	9,	39,	53,	2,	5,	18,	14,	86,	489,	24,	74,	70,	10,	35,	5,	36,	66,	5,	22,	49,	207,	9,	5,	26,	10,	14,	2,	0,	2,	0,	5,	2,	2,	7,	47,	8,	32,	55,	89,	112,	434,	250,	124,	285,	1,	95,	87};
    
    //FLUORIDE_CO_63nt_NF
    //{7736,	2386,	638,	520,	294,	58,	40,	11,	10,	134,	132,	38,	130,	417,	22,	173,	244,	5,	8,	42,	38,	214,	632,	65,	198,	201,	62,	135,	11,	78,	151,	14,	41,	87,	308,	34,	24,	88,	51,	57,	2,	1,	23,	0,	22,	18,	13,	61,	171,	40,	66,	97,	97,	160,	582,	301,	227,	562,	1,	151,	97,	3};
    //FLUORIDE_CO_63nt_F
    //{4448,	1557,	380,	568,	273,	34,	22,	6,	3,	75,	58,	6,	50,	136,	8,	60,	86,	1,	3,	21,	20,	113,	650,	30,	98,	58,	23,	78,	3,	31,	68,	5,	30,	70,	403,	15,	8,	41,	13,	15,	0,	0,	4,	1,	14,	2,	2,	12,	69,	14,	46,	78,	117,	164,	589,	273,	176,	476,	2,	105,	64,	1};
    
    //FLUORIDE_CO_64nt_NF
    //{17428,	4822,	1292,	1071,	615,	122,	62,	16,	17,	272,	215,	59,	329,	1171,	62,	389,	602,	14,	13,	88,	86,	446,	1143,	142,	571,	566,	122,	318,	18,	180,	331,	25,	104,	194,	816,	46,	41,	265,	153,	178,	10,	7,	37,	3,	53,	29,	15,	111,	307,	55,	101,	139,	115,	172,	692,	456,	384,	1265,	8,	374,	201,	8,	13	};
    //FLUORIDE_CO_64nt_F
    //{4529,	1566,	385,	642,	306,	37,	20,	5,	18,	97,	77,	6,	55,	157,	5,	73,	75,	3,	7,	41,	19,	136,	720,	47,	116,	105,	20,	60,	9,	52,	90,	9,	35,	67,	409,	16,	5,	47,	31,	19,	1,	0,	4,	1,	20,	8,	3,	13,	82,	32,	64,	126,	195,	280,	950,	443,	283,	748,	9,	165,	162,	3,	20};
    
    //FLUORIDE_CO_65nt_NF
    //{57050,	15603,	4154,	2914,	1672,	432,	225,	61,	82,	980,	691,	177,	1335,	4631,	206,	1432,	2312,	44,	78,	292,	219,	1676,	3775,	509,	2052,	1979,	444,	1038,	80,	559,	1070,	81,	266,	560,	2406,	155,	125,	701,	437,	578,	27,	31,	99,	1,	165,	52,	80,	274,	543,	155,	282,	435,	270,	299,	1846,	1334,	1615,	5054,	29,	1659,	811,	12,	46,	10};
    //FLUORIDE_CO_65nt_F
    //{6760,	2253,	543,	904,	470,	60,	34,	6,	21,	133,	137,	10,	116,	372,	23,	165,	198,	10,	10,	48,	53,	223,	1230,	92,	196,	172,	27,	109,	13,	80,	154,	19,	42,	145,	713,	28,	13,	74,	26,	31,	2,	4,	13,	0,	36,	12,	15,	30,	153,	54,	125,	195,	349,	485,	1775,	884,	601,	1484,	13,	288,	232,	8,	22,	8	};
    
    //FLUORIDE_CO_66nt_NF
    //{337799,	96905,	24960,	18092,	10349,	2617,	1161,	313,	473,	5993,	3848,	1030,	8234,	29138,	1367,	8948,	14362,	302,	420,	1712,	1402,	10574,	22574,	2932,	12776,	11837,	2853,	7265,	516,	3929,	6968,	604,	2049,	4059,	16328,	1162,	815,	5629,	3290,	4333,	193,	205,	430,	22,	1289,	377,	591,	2013,	3155,	988,	2318,	3617,	1649,	1773,	13577,	10015,	14576,	49212,	317,	15381,	7867,	134,	419,	93,	571};
    //FLUORIDE_CO_66nt_F
    //{9999,	3443,	1041,	1469,	808,	150,	94,	15,	42,	268,	322,	39,	474,	1694,	120,	504,	564,	22,	34,	166,	160,	503,	1429,	124,	371,	393,	91,	278,	22,	288,	553,	55,	155,	325,	1587,	71,	39,	262,	163,	204,	6,	9,	32,	1,	120,	37,	36,	156,	322,	108,	334,	474,	560,	839,	3375,	1636,	1478,	5347,	40,	1074,	906,	15,	49,	15,	71};
    
    //FLUORIDE_CO_67nt_NF
    //{85292,	24653,	6431,	4474,	2618,	638,	310,	65,	128,	1552,	1054,	270,	2105,	6979,	344,	2360,	3542,	73,	141,	448,	388,	2747,	5908,	809,	3298,	3086,	723,	2004,	106,	965,	1701,	145,	524,	943,	3688,	277,	245,	1375,	901,	1293,	67,	61,	134,	9,	432,	132,	219,	676,	1129,	277,	742,	1151,	513,	583,	4509,	3062,	4853,	16983,	109,	5510,	2801,	55,	106,	40,	218,	1424	};
    //FLUORIDE_CO_67nt_F
    //{4660,	1617,	437,	635,	336,	71,	36,	7,	13,	123,	110,	19,	161,	518,	26,	178,	213,	9,	10,	53,	65,	179,	673,	71,	155,	156,	37,	106,	9,	101,	177,	16,	58,	130,	641,	18,	13,	92,	54,	81,	1,	4,	12,	1,	60,	25,	13,	79,	152,	54,	184,	296,	369,	491,	2001,	1016,	872,	2835,	23,	548,	491,	4,	11,	7,	28,	177};
    
    //FLUORIDE_CO_68nt_NF
    //{122100,	36095,	9489,	6685,	3825,	1045,	474,	106,	189,	2296,	1446,	385,	2857,	9928,	478,	3426,	5205,	95,	151,	683,	528,	4068,	8808,	1179,	4925,	4717,	1085,	2950,	176,	1442,	2532,	199,	765,	1466,	5526,	408,	364,	2230,	1501,	2141,	109,	76,	208,	10,	729,	277,	390,	1294,	2047,	489,	1262,	2124,	974,	1033,	7694,	5109,	8928,	32174,	203,	10800,	5551,	79,	198,	72,	485,	3106,	584};
    //FLUORIDE_CO_68nt_F
    //{7290,	2554,	697,	1093,	582,	74,	63,	16,	30,	211,	250,	36,	295,	954,	59,	301,	381,	11,	23,	106,	99,	326,	1008,	103,	235,	271,	65,	213,	21,	177,	289,	34,	107,	179,	932,	33,	23,	181,	107,	152,	10,	8,	30,	3,	146,	48,	48,	158,	326,	93,	289,	518,	562,	778,	3182,	1557,	1524,	5742,	39,	1154,	1007,	15,	50,	12,	63,	402,	94};
    
    //FLUORIDE_CO_69nt_NF
    //{156,	59,	22,	5,	6,	2,	4,	1,	0,	3,	1,	0,	6,	14,	0,	4,	10,	0,	1,	1,	1,	6,	13,	0,	7,	4,	2,	5,	0,	3,	6,	0,	3,	1,	10,	0,	0,	2,	3,	5,	0,	0,	0,	0,	0,	1,	0,	2,	4,	1,	2,	7,	2,	3,	23,	11,	13,	58,	0,	23,	11,	1,	0,	0,	6,	15,	2,	0};
    //FLUORIDE_CO_69nt_F
    //{451,	123,	43,	70,	20,	2,	1,	0,	3,	9,	7,	3,	4,	11,	0,	6,	9,	1,	1,	0,	3,	13,	78,	2,	16,	12,	1,	16,	2,	5,	5,	0,	7,	6,	44,	1,	0,	6,	4,	1,	1,	0,	0,	0,	3,	0,	1,	6,	20,	4,	7,	15,	33,	37,	193,	77,	58,	207,	2,	32,	41,	1,	7,	2,	2,	12,	7,	0	};
    
    //FLUORIDE_CO_70nt_NF
    //{379,	127,	41,	28,	10,	1,	0,	1,	1,	7,	5,	1,	10,	47,	2,	12,	16,	0,	0,	1,	1,	11,	21,	4,	14,	21,	1,	9,	0,	6,	14,	0,	2,	5,	15,	0,	3,	10,	10,	5,	2,	1,	3,	0,	3,	0,	0,	1,	12,	1,	10,	10,	6,	10,	42,	18,	41,	158,	0,	34,	26,	0,	3,	1,	2,	15,	2,	0,	11		};
    //FLUORIDE_CO_70nt_F
    //{1174,	391,	92,	128,	65,	9,	4,	3,	1,	18,	8,	1,	12,	48,	4,	14,	23,	1,	0,	5,	2,	33,	148,	9,	20,	25,	5,	20,	4,	18,	26,	2,	9,	20,	93,	2,	5,	21,	13,	10,	0,	0,	2,	0,	14,	6,	5,	14,	63,	12,	26,	84,	112,	177,	573,	304,	225,	698,	6,	124,	123,	1,	7,	0,	7,	44,	15,	2,	17};
    
    //FLUORIDE_CO_71nt_NF
    //{489,	184,	41,	35,	23,	9,	3,	0,	0,	7,	6,	0,	14,	54,	6,	14,	25,	1,	1,	5,	3,	21,	54,	9,	28,	18,	2,	16,	1,	7,	11,	0,	6,	6,	31,	2,	3,	15,	13,	16,	0,	0,	3,	1,	1,	1,	1,	8,	18,	0,	6,	11,	5,	11,	40,	21,	35,	173,	1,	60,	42,	0,	0,	1,	8,	24,	12,	0,	9,	1};
    //FLUORIDE_CO_71nt_F
    //{1845,	657,	161,	240,	129,	13,	10,	3,	4,	33,	28,	0,	15,	62,	2,	28,	43,	2,	3,	7,	10,	69,	350,	21,	87,	82,	13,	67,	2,	46,	57,	5,	18,	28,	184,	10,	3,	27,	18,	9,	0,	0,	6,	1,	12,	6,	3,	18,	107,	14,	46,	78,	106,	118,	489,	249,	231,	927,	9,	167,	166,	5,	11,	5,	15,	85,	34,	6,	37,	15};
    
    //FLUORIDE_CO_72nt_NF
    //{390,	129,	47,	22,	25,	2,	2,	1,	0,	5,	11,	1,	16,	38,	2,	15,	24,	2,	1,	7,	6,	16,	41,	6,	27,	19,	3,	16,	1,	4,	13,	1,	1,	7,	23,	5,	2,	7,	5,	13,	0,	1,	0,	0,	4,	0,	2,	6,	9,	3,	9,	10,	4,	4,	36,	26,	31,	142,	1,	53,	21,	0,	3,	0,	4,	28,	2,	0,	3,	1,	1};
    //FLUORIDE_CO_72nt_F
    //{1823,	689,	154,	247,	145,	17,	3,	2,	0,	37,	19,	2,	16,	52,	6,	30,	32,	0,	2,	16,	7,	77,	391,	29,	81,	82,	19,	61,	0,	36,	52,	5,	10,	47,	220,	9,	4,	37,	17,	14,	0,	1,	3,	0,	9,	1,	3,	13,	99,	32,	27,	59,	63,	87,	396,	208,	224,	756,	5,	172,	181,	8,	9,	5,	38,	99,	34,	1,	26,	9,	1};
    
    //FLUORIDE_CO_73nt_NF
    //{400,	134,	23,	29,	13,	2,	2,	0,	1,	11,	3,	2,	11,	34,	3,	10,	19,	1,	1,	5,	2,	19,	41,	5,	12,	13,	4,	14,	0,	8,	9,	1,	2,	4,	21,	0,	0,	9,	7,	9,	0,	0,	1,	0,	4,	0,	0,	7,	7,	1,	4,	8,	5,	7,	37,	19,	39,	139,	1,	54,	28,	0,	1,	0,	4,	13,	2,	0,	2,	1,	4,	4	};
    //FLUORIDE_CO_73nt_F
    //{2208,	652,	138,	280,	171,	16,	8,	3,	1,	31,	32,	2,	22,	75,	2,	33,	37,	1,	4,	5,	14,	77,	451,	25,	83,	60,	17,	80,	2,	27,	42,	2,	10,	32,	117,	4,	2,	26,	16,	13,	0,	2,	2,	0,	9,	1,	8,	19,	127,	13,	31,	87,	121,	133,	554,	269,	282,	1307,	3,	223,	206,	1,	7,	3,	18,	84,	56,	6,	22,	18,	30,	125};
    
    //FLUORIDE_CO_74nt_NF
    //{533,	131,	39,	30,	23,	5,	2,	1,	0,	10,	6,	1,	19,	30,	1,	18,	20,	1,	1,	3,	3,	16,	43,	11,	23,	29,	7,	15,	2,	13,	12,	2,	3,	9,	31,	4,	3,	16,	19,	27,	0,	0,	2,	0,	4,	2,	1,	8,	16,	1,	6,	16,	5,	3,	55,	21,	71,	246,	0,	86,	53,	0,	7,	2,	26,	112,	9,	0,	24,	0,	6,	30,	1};
    //FLUORIDE_CO_74nt_F
    //{2085,	660,	206,	293,	156,	21,	10,	3,	4,	45,	30,	3,	20,	59,	6,	30,	47,	2,	4,	17,	3,	73,	453,	33,	85,	77,	9,	63,	4,	27,	53,	5,	18,	36,	193,	7,	4,	42,	26,	26,	0,	0,	4,	0,	12,	6,	6,	22,	187,	22,	30,	72,	60,	68,	308,	143,	214,	1364,	10,	249,	227,	3,	10,	10,	89,	314,	69,	14,	82,	53,	73,	210,	56};
    
    //FLUORIDE_CO_75nt_NF
    //{778,	241,	69,	58,	33,	9,	3,	2,	1,	20,	10,	3,	17,	71,	4,	18,	49,	1,	0,	8,	5,	32,	55,	5,	28,	34,	7,	24,	1,	13,	27,	2,	9,	20,	56,	5,	10,	30,	23,	34,	1,	4,	3,	0,	8,	2,	5,	5,	12,	5,	11,	20,	10,	10,	94,	43,	76,	316,	2,	136,	70,	2,	3,	1,	7,	41,	2,	1,	8,	2,	7,	40,	2,	7};
    //FLUORIDE_CO_75nt_F
    //{2861,	886,	210,	407,	192,	31,	12,	4,	4,	46,	46,	3,	24,	83,	2,	45,	71,	2,	5,	15,	16,	106,	532,	39,	109,	125,	23,	105,	7,	33,	76,	11,	28,	47,	287,	14,	4,	69,	41,	30,	1,	2,	2,	0,	15,	5,	5,	24,	185,	31,	42,	55,	58,	48,	343,	192,	339,	1411,	5,	341,	282,	8,	20,	9,	27,	170,	57,	5,	49,	29,	45,	256,	45,	94	};
    
    //FLUORIDE_CO_76nt_NF
    //{482,	162,	47,	27,	17,	7,	1,	1,	1,	11,	6,	3,	13,	32,	5,	20,	26,	0,	1,	3,	3,	19,	38,	7,	27,	28,	6,	12,	0,	7,	12,	2,	3,	9,	47,	3,	2,	29,	23,	33,	0,	2,	1,	0,	3,	4,	2,	6,	6,	2,	4,	14,	3,	5,	41,	37,	53,	230,	0,	78,	45,	0,	2,	3,	6,	37,	5,	0,	7,	2,	5,	19,	0,	5,	14};
    //FLUORIDE_CO_76nt_F
    {1696,	527,	115,	210,	121,	9,	3,	5,	2,	39,	18,	0,	14,	31,	4,	28,	30,	0,	1,	4,	5,	66,	332,	15,	41,	52,	13,	47,	3,	19,	38,	1,	11,	27,	167,	3,	3,	49,	22,	22,	0,	0,	1,	1,	14,	5,	8,	17,	125,	25,	29,	40,	27,	30,	193,	73,	167,	982,	3,	208,	171,	5,	10,	4,	31,	118,	26,	3,	29,	15,	30,	154,	44,	55,	95};
    
    //FLUORIDE_CO_77t_NF
   //{891,	286,	67,	55,	30,	10,	2,	1,	2,	6,	11,	4,	21,	67,	5,	29,	48,	1,	4,	12,	9,	32,	57,	9,	35,	33,	5,	18,	3,	15,	21,	0,	8,	22,	70,	8,	3,	42,	45,	44,	1,	1,	3,	1,	6,	4,	2,	10,	9,	7,	12,	22,	12,	16,	83,	44,	99,	394,	3,	163,	63,	0,	11,	1,	14,	59,	6,	1,	20,	6,	6,	18,	1,	9,	28,	11};
    
    //FLUORIDE_CO_77nt_F
    //{2305,	737,	154,	275,	158,	27,	13,	1,	7,	41,	34,	3,	13,	61,	2,	36,	46,	0,	2,	13,	13,	78,	398,	32,	78,	87,	13,	66,	5,	20,	56,	3,	18,	48,	216,	15,	6,	50,	37,	21,	2,	1,	8,	0,	14,	6,	4,	19,	180,	34,	44,	59,	47,	56,	296,	165,	279,	1330,	5,	334,	266,	6,	31,	5,	35,	119,	63,	5,	50,	60,	41,	201,	37,	75,	134,	34};
    
    //FLUORIDE_CO_78nt_NF
    //{1430,	462,	120,	100,	67,	11,	7,	1,	1,	30,	16,	2,	30,	143,	5,	65,	63,	1,	2,	10,	6,	58,	113,	17,	70,	66,	19,	38,	4,	26,	39,	6,	15,	43,	162,	13,	11,	87,	81,	65,	2,	1,	3,	0,	11,	8,	1,	18,	41,	6,	14,	43,	11,	19,	163,	81,	174,	875,	6,	323,	181,	2,	11,	8,	86,	437,	49,	2,	94,	31,	38,	85,	9,	29,	78,	69,	19};
    //FLUORIDE_CO_78nt_F
    //{3151,	1036,	257,	396,	249,	23,	15,	2,	5,	71,	59,	1,	32,	89,	9,	55,	72,	1,	5,	16,	24,	143,	628,	54,	150,	162,	21,	84,	7,	34,	69,	10,	22,	72,	346,	21,	4,	87,	51,	47,	3,	4,	9,	1,	29,	9,	9,	43,	312,	62,	85,	105,	77,	65,	491,	260,	451,	2601,	13,	556,	508,	17,	50,	26,	157,	620,	153,	18,	247,	165,	159,	466,	144,	188,	289,	86,	49};
    
    //FLUORIDE_CO_79nt_NF
    //{1123,	358,	127,	67,	57,	8,	4,	1,	1,	23,	13,	3,	33,	90,	9,	31,	59,	0,	7,	5,	7,	41,	90,	18,	50,	58,	12,	36,	2,	23,	41,	3,	10,	44,	104,	4,	9,	58,	34,	52,	1,	2,	8,	0,	12,	3,	8,	13,	36,	5,	12,	24,	10,	17,	135,	70,	152,	816,	6,	249,	140,	3,	26,	10,	165,	704,	74,	7,	122,	21,	34,	66,	7,	22,	68,	59,	15,	25};
    //FLUORIDE_CO_79nt_F
    //{2448,	898,	208,	335,	220,	22,	6,	4,	6,	53,	48,	6,	24,	78,	4,	43,	57,	1,	4,	16,	14,	101,	508,	35,	109,	125,	22,	73,	8,	39,	68,	2,	23,	71,	284,	16,	9,	46,	31,	21,	2,	2,	9,	2,	14,	7,	9,	27,	246,	38,	53,	78,	54,	63,	417,	188,	349,	2268,	10,	434,	447,	10,	38,	28,	257,	992,	195,	15,	260,	88,	106,	284,	73,	149,	241,	126,	25,	52};
    
    //FLUORIDE_CO_80nt_NF
    //{867,	260,	78,	57,	22,	6,	6,	1,	1,	19,	12,	1,	20,	72,	3,	33,	40,	0,	2,	5,	7,	30,	54,	9,	41,	41,	12,	28,	1,	17,	22,	2,	5,	29,	84,	10,	5,	49,	29,	32,	0,	0,	3,	1,	7,	1,	4,	13,	22,	7,	14,	32,	8,	18,	98,	52,	116,	532,	5,	164,	102,	3,	5,	3,	50,	200,	32,	5,	77,	40,	34,	46,	5,	22,	58,	37,	13,	16,	12};
    // //FLUORIDE_CO_80nt_F
    //{1943,	689,	203,	275,	156,	25,	4,	4,	4,	40,	44,	2,	8,	69,	2,	29,	49,	2,	3,	6,	13,	73,	408,	15,	62,	105,	14,	54,	2,	21,	65,	6,	24,	39,	270,	7,	7,	46,	27,	25,	2,	3,	2,	0,	19,	7,	6,	30,	200,	23,	43,	58,	48,	58,	364,	181,	351,	1544,	15,	290,	286,	8,	33,	12,	76,	347,	105,	11,	211,	129,	95,	207,	74,	94,	171,	97,	39,	36,	26};
    
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////    MUTANTS DATA   //////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    
    
    //FLUORIDE_CO_73nt_M18_NF
    //{395,	119,	31,	33,	9,	0,	1,	0,	0,	16,	7,	0,	76,	33,	2,	18,	21,	1,	0,	6,	2,	13,	26,	2,	6,	16,	2,	2,	0,	4,	5,	1,	5,	0,	4,	2,	2,	1,	5,	6,	1,	0,	0,	0,	3,	1,	1,	6,	25,	4,	7,	4,	11,	7,	34,	14,	11,	102,	6,	30,	18,	0,	3,	1,	4,	11,	4,	1,	3,	0,	2,	13};
    //FLUORIDE_CO_73nt_M18_F
    //{516,	128,	48,	37,	21,	0,	4,	2,	3,	13,	9,	2,	102,	40,	3,	18,	28,	0,	1,	0,	2,	25,	37,	7,	12,	13,	1,	6,	1,	6,	2,	0,	2,	4,	8,	1,	2,	5,	5,	6,	0,	1,	1,	0,	2,	3,	0,	11,	15,	2,	4,	5,	4,	4,	26,	19,	26,	145,	0,	42,	18,	0,	2,	0,	1,	17,	1,	0,	5,	1,	2,	20};
     
    //FLUORIDE_CO_73nt_M19_NF
    //{36969,	10705,	3064,	2164,	1099,	252,	248,	71,	87,	817,	539,	95,	1199,	3756,	200,	1539,	2010,	27,	62,	322,	248,	1216,	2134,	388,	1227,	1432,	318,	583,	47,	664,	872,	134,	267,	361,	1414,	173,	264,	1194,	898,	1986,	163,	153,	1066,	25,	1168,	848,	23,	94,	265,	21,	57,	75,	27,	68,	339,	383,	240,	1247,	17,	431,	199,	6,	5,	1,	7,	30,	7,	0,	1,	8,	11,	28	};
    //FLUORIDE_CO_73nt_M19_F
    //{48971,	12856,	4500,	2625,	1281,	293,	321,	108,	128,	1372,	600,	131,	1322,	4030,	233,	1925,	2245,	50,	69,	447,	373,	1750,	2438,	492,	1497,	1784,	418,	671,	73,	803,	957,	209,	405,	448,	1599,	218,	330,	1429,	1194,	2443,	195,	195,	1572,	36,	1735,	1088,	41,	149,	419,	51,	85,	134,	73,	114,	559,	537,	351,	1632,	26,	582,	259,	6,	13,	4,	12,	73,	9,	1,	6,	6,	32,	53};
     
    //FLUORIDE_CO_73nt_M20_NF
    //{24801,	8664,	3763,	2007,	1318,	270,	227,	94,	120,	997,	508,	103,	723,	2010,	167,	1105,	1405,	38,	58,	335,	343,	1484,	1463,	401,	846,	1305,	245,	516,	68,	376,	607,	131,	296,	409,	1086,	109,	271,	730,	741,	1128,	152,	104,	275,	3,	179,	144,	27,	110,	223,	52,	74,	139,	80,	113,	386,	229,	217,	739,	20,	300,	194,	8,	48,	3,	13,	71,	20,	6,	95,	7,	34,	51};
    //FLUORIDE_CO_73nt_M20_F
    //{5616,	1849,	1128,	554,	318,	57,	54,	20,	29,	298,	70,	11,	56,	182,	25,	148,	167,	6,	14,	75,	75,	372,	903,	147,	193,	235,	35,	116,	18,	66,	139,	32,	79,	204,	419,	34,	44,	173,	178,	252,	27,	23,	97,	6,	65,	32,	9,	33,	176,	53,	59,	93,	127,	273,	587,	327,	189,	447,	14,	197,	85,	7,	17,	1,	9,	44,	33,	9,	136,	31,	35,	98};
     
    //FLUORIDE_CO_73nt_M21_NF
    //{11630,	2951,	913,	629,	312,	90,	51,	11,	12,	194,	101,	32,	1949,	1370,	84,	489,	644,	6,	9,	44,	44,	416,	982,	139,	340,	395,	69,	158,	10,	145,	202,	29,	66,	86,	328,	36,	80,	302,	247,	443,	29,	38,	204,	7,	286,	162,	2,	18,	57,	10,	12,	12,	8,	15,	57,	57,	59,	230,	5,	72,	29,	0,	3,	0,	1,	10,	1,	0,	1,	1,	10,	3};
    //FLUORIDE_CO_73nt_M21_F
    //{57741,	15027,	4264,	5996,	2781,	327,	359,	120,	129,	1277,	612,	80,	4692,	2288,	157,	1074,	1180,	31,	64,	416,	265,	1903,	7686,	655,	1101,	1118,	249,	695,	61,	416,	709,	148,	400,	455,	2637,	139,	169,	1996,	637,	783,	66,	36,	1061,	134,	8098,	495,	23,	154,	937,	77,	170,	328,	352,	601,	2551,	1904,	585,	2830,	32,	491,	366,	5,	20,	6,	10,	79,	53,	8,	20,	21,	37,	143};
     
     //FLUORIDE_CO_73nt_M22_NF
     //{2283,	778,	359,	143,	71,	21,	25,	3,	12,	61,	32,	15,	88,	169,	23,	100,	150,	6,	5,	22,	11,	89,	98,	16,	69,	112,	21,	38,	4,	30,	34,	10,	10,	13,	40,	10,	9,	25,	24,	38,	3,	0,	50,	0,	46,	74,	5,	25,	62,	15,	46,	72,	53,	50,	139,	79,	145,	381,	11,	259,	75,	3,	20,	9,	32,	191,	14,	5,	126,	1,	34,	25};
     //FLUORIDE_CO_73nt_M22_F
     //{6968,	2162,	1149,	433,	301,	62,	58,	11,	20,	259,	101,	21,	159,	447,	27,	268,	391,	12,	12,	61,	51,	336,	381,	78,	189,	272,	38,	65,	7,	72,	78,	17,	35,	38,	138,	27,	21,	93,	85,	123,	8,	11,	92,	2,	132,	195,	18,	68,	161,	39,	85,	194,	131,	109,	450,	212,	445,	1548,	43,	708,	293,	20,	57,	13,	137,	481,	44,	8,	267,	12,	55,	52};
     
    //FLUORIDE_CO_73nt_M23_NF
    //{8041,	2401,	1062,	541,	377,	119,	78,	23,	32,	295,	150,	39,	1057,	1061,	104,	415,	580,	10,	21,	76,	73,	438,	470,	152,	285,	383,	57,	114,	12,	111,	135,	17,	66,	68,	188,	18,	32,	98,	100,	148,	11,	7,	101,	4,	200,	225,	14,	97,	238,	94,	139,	250,	165,	79,	449,	259,	413,	1425,	44,	694,	266,	19,	64,	26,	196,	839,	54,	11,	494,	12,	66,	89};
    //FLUORIDE_CO_73nt_M23_F
    //{16737,	5431,	2472,	1735,	1335,	383,	188,	56,	59,	438,	306,	50,	979,	958,	77,	297,	458,	21,	66,	134,	134,	728,	2258,	356,	451,	471,	102,	303,	26,	140,	239,	32,	130,	169,	663,	36,	23,	133,	108,	134,	14,	6,	234,	12,	471,	469,	25,	183,	1292,	345,	327,	635,	909,	1799,	3127,	1504,	1048,	2763,	104,	1005,	479,	43,	140,	51,	287,	1540,	207,	48,	1368,	178,	195,	458};
    
    ////////////////////////////////////    EQUILIBRIUM DATA   //////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    

    //FLUORIDE_EQ_55nt_NF
    //{1729,	500,	130,	185,	91,	34,	8,	3,	2,	34,	20,	6,	27,	116,	8,	39,	57,	3,	1,	39,	18,	135,	349,	18,	90,	101,	13,	22,	9,	20,	29,	7,	14,	25,	69,	2,	7,	33,	23,	64,	2,	3,	2,	0,	6,	1,	0,	1,	4,	3,	3,	180,	0,	0};
    
    //FLUORIDE_EQ_55nt_F
    //{1823,	570,	150,	233,	128,	21,	13,	5,	3,	37,	17,	3,	32,	109,	8,	40,	43,	2,	2,	20,	28,	131,	697,	22,	65,	91,	8,	30,	1,	19,	32,	10,	22,	32,	120,	5,	2,	28,	13,	53,	2,	7,	3,	0,	3,	1,	1,	1,	0,	1,	3,	171,	0,	0};
    
    //FLUORIDE_EQ_56nt_NF
    //{1974,	596,	155,	261,	155,	27,	7,	2,	5,	37,	41,	12,	40,	131,	12,	77,	83,	3,	2,	32,	18,	99,	305,	25,	55,	58,	7,	21,	4,	22,	29,	15,	20,	24,	65,	1,	10,	19,	10,	28,	6,	5,	10,	0,	14,	0,	0,	0,	3,	1,	0,	0,	3,	0,	0};
    
    //FLUORIDE_EQ_56nt_F
    //{1891,	609,	166,	284,	152,	40,	12,	7,	5,	38,	33,	4,	25,	112,	10,	47,	61,	0,	5,	36,	32,	118,	612,	35,	48,	66,	7,	35,	4,	21,	32,	4,	16,	43,	113,	6,	9,	14,	8,	22,	3,	1,	2,	1,	13,	2,	0,	2,	1,	0,	2,	0,	2,	0,	0};
    
    //FLUORIDE_EQ_57nt_NF
    //{1880,	656,	147,	240,	122,	35,	7,	4,	6,	47,	32,	8,	46,	130,	6,	63,	62,	3,	4,	23,	21,	135,	404,	24,	66,	57,	19,	29,	5,	25,	42,	10,	19,	26,	65,	4,	5,	26,	23,	40,	4,	3,	3,	0,	7,	4,	0,	0,	3,	0,	1,	2,	3,	13,	0,	0};
    
    //FLUORIDE_EQ_57nt_F
    //{1966,	681,	192,	321,	154,	34,	7,	2,	8,	54,	17,	6,	34,	101,	7,	61,	57,	1,	11,	35,	40,	123,	773,	42,	66,	45,	15,	31,	4,	19,	51,	10,	33,	48,	163,	9,	5,	33,	7,	24,	2,	1,	3,	0,	7,	3,	0,	2,	2,	0,	2,	0,	0,	11,	0,	0};
    
    //FLUORIDE_EQ_58nt_NF
    //{1116,	346,	67,	129,	62,	23,	8,	2,	3,	30,	11,	6,	14,	84,	7,	37,	36,	1,	4,	16,	17,	71,	268,	11,	36,	44,	9,	25,	2,	24,	24,	2,	21,	15,	55,	5,	10,	23,	8,	28,	2,	2,	7,	0,	11,	0,	0,	2,	4,	0,	1,	5,	0,	2,	14,	0,	0};
    
    //FLUORIDE_EQ_58nt_F
    //{1045,	322,	82,	145,	70,	17,	4,	2,	4,	30,	6,	0,	23,	67,	4,	28,	39,	1,	2,	16,	12,	47,	417,	22,	42,	34,	8,	21,	0,	8,	29,	5,	16,	32,	70,	4,	6,	12,	2,	14,	5,	1,	2,	0,	10,	0,	0,	1,	0,	0,	0,	2,	0,	0,	12,	0,	0};
    
    //FLUORIDE_EQ_59nt_NF
    //{3231,	1027,	214,	367,	195,	69,	27,	2,	11,	89,	51,	25,	92,	258,	26,	140,	123,	5,	10,	70,	61,	273,	1121,	75,	210,	179,	40,	96,	5,	90,	130,	25,	65,	89,	265,	14,	29,	120,	49,	181,	12,	7,	34,	0,	39,	8,	0,	9,	23,	0,	3,	3,	3,	5,	17,	0,	0,	0};
    
    //FLUORIDE_EQ_59nt_F
    //{3271,	1112,	236,	482,	265,	69,	22,	7,	9,	66,	52,	3,	66,	208,	18,	130,	113,	6,	10,	60,	54,	304,	1764,	80,	159,	170,	38,	92,	13,	66,	130,	19,	74,	144,	294,	13,	23,	77,	24,	123,	9,	2,	16,	7,	55,	8,	0,	9,	19,	2,	3,	4,	3,	6,	13,	0,	0,	0};
    
    //FLUORIDE_EQ_60nt_NF
    //{8770,	2845,	606,	920,	478,	167,	57,	18,	20,	203,	178,	41,	205,	740,	53,	267,	268,	10,	33,	102,	123,	470,	1609,	141,	393,	342,	86,	205,	18,	150,	201,	50,	75,	144,	527,	41,	46,	149,	92,	252,	41,	37,	116,	2,	401,	30,	2,	15,	126,	15,	5,	8,	5,	18,	32,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_60nt_F
    //{8586,	2817,	713,	1132,	603,	152,	48,	22,	28,	205,	105,	16,	148,	525,	59,	208,	172,	2,	10,	107,	103,	453,	2860,	160,	289,	268,	56,	192,	14,	99,	261,	44,	99,	202,	698,	23,	29,	118,	49,	147,	44,	22,	123,	11,	510,	47,	2,	18,	129,	21,	10,	5,	8,	16,	57,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_61nt_NF
    //{2293,	728,	168,	281,	122,	31,	18,	11,	9,	46,	31,	14,	50,	108,	13,	91,	61,	2,	6,	24,	26,	150,	557,	45,	111,	106,	20,	37,	4,	37,	91,	14,	36,	66,	185,	10,	17,	41,	33,	86,	8,	5,	17,	3,	18,	6,	2,	1,	15,	1,	2,	1,	3,	8,	9,	3,	1,	24,	0,	0};
    
    //FLUORIDE_EQ_61nt_F
    //{2142,	789,	195,	340,	162,	41,	13,	5,	4,	49,	21,	4,	26,	90,	5,	44,	45,	0,	7,	26,	30,	109,	832,	49,	84,	77,	33,	34,	2,	28,	75,	14,	25,	69,	217,	9,	7,	35,	16,	57,	7,	1,	5,	0,	29,	4,	1,	3,	8,	1,	1,	2,	0,	5,	11,	6,	1,	24,	0,	0};
    
    //FLUORIDE_EQ_62nt_NF
    //{3989,	1390,	271,	451,	221,	70,	17,	13,	11,	86,	83,	18,	106,	379,	42,	172,	170,	10,	13,	63,	70,	263,	1109,	70,	271,	214,	55,	92,	15,	108,	183,	41,	79,	88,	259,	23,	20,	123,	93,	228,	21,	23,	27,	3,	64,	6,	1,	10,	41,	6,	5,	6,	4,	8,	18,	11,	2,	8,	0,	0,	0};
    
    //FLUORIDE_EQ_62nt_F
    //{4356,	1495,	396,	629,	318,	91,	39,	13,	16,	96,	52,	11,	79,	326,	24,	144,	121,	3,	19,	60,	57,	319,	2069,	122,	230,	186,	56,	118,	13,	95,	214,	30,	91,	128,	369,	35,	29,	115,	54,	159,	21,	10,	22,	1,	72,	9,	5,	12,	18,	2,	7,	6,	6,	6,	28,	13,	10,	3,	0,	0,	0};
    
    //FLUORIDE_EQ_63nt_NF
    //{2905,	981,	208,	347,	198,	69,	28,	7,	8,	72,	56,	8,	86,	269,	22,	106,	124,	6,	15,	40,	44,	195,	742,	37,	183,	143,	33,	85,	14,	103,	147,	30,	43,	100,	451,	21,	20,	97,	68,	183,	20,	21,	55,	2,	36,	13,	4,	7,	48,	5,	7,	6,	3,	1,	13,	4,	1,	8,	0,	90,	0,	0};
    
    //FLUORIDE_EQ_63nt_F
    //{2986,	1062,	291,	483,	251,	52,	25,	11,	10,	83,	44,	8,	55,	180,	20,	100,	77,	5,	9,	35,	37,	181,	1417,	64,	124,	136,	31,	96,	10,	39,	162,	27,	70,	130,	508,	27,	20,	61,	44,	107,	16,	8,	23,	0,	36,	5,	1,	10,	31,	2,	3,	10,	0,	3,	24,	5,	2,	11,	1,	92,	0,	0};
    
    //FLUORIDE_EQ_64nt_NF
    //{1469,	507,	113,	195,	104,	26,	13,	1,	3,	33,	44,	16,	45,	154,	11,	88,	87,	3,	4,	14,	23,	102,	449,	19,	89,	92,	29,	42,	9,	55,	98,	14,	33,	56,	279,	20,	18,	48,	37,	86,	16,	13,	26,	0,	8,	4,	2,	4,	7,	0,	0,	0,	0,	0,	3,	1,	2,	3,	0,	12,	0,	0,	0};
    
    //FLUORIDE_EQ_64nt_F
    //{1424,	502,	154,	226,	139,	23,	8,	3,	6,	47,	13,	5,	40,	139,	13,	55,	67,	0,	3,	16,	24,	98,	756,	39,	86,	82,	16,	50,	4,	33,	100,	16,	43,	107,	380,	15,	13,	43,	20,	61,	10,	0,	11,	1,	15,	3,	2,	1,	11,	3,	0,	3,	1,	0,	1,	1,	0,	5,	0,	5,	0,	0,	0};
    
    //FLUORIDE_EQ_65nt_NF
    //{3056,	1008,	208,	370,	158,	69,	15,	4,	9,	93,	88,	32,	83,	177,	15,	91,	121,	2,	10,	29,	38,	206,	553,	39,	178,	145,	51,	95,	7,	63,	163,	23,	45,	82,	305,	24,	35,	96,	86,	153,	13,	17,	35,	1,	10,	1,	0,	5,	16,	3,	2,	1,	3,	1,	4,	5,	2,	7,	1,	1,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_65nt_F
    //{3233,	1135,	280,	516,	279,	53,	26,	2,	10,	82,	41,	4,	63,	120,	13,	80,	103,	3,	7,	46,	47,	204,	1562,	79,	143,	128,	23,	98,	13,	44,	190,	21,	61,	118,	513,	25,	24,	73,	26,	115,	7,	0,	10,	1,	16,	6,	0,	4,	12,	7,	4,	3,	1,	0,	11,	2,	3,	7,	0,	1,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_66nt_NF
    //{4750,	1592,	366,	553,	259,	107,	36,	15,	14,	157,	193,	76,	219,	696,	58,	287,	409,	7,	30,	79,	74,	357,	772,	82,	387,	326,	72,	197,	20,	198,	404,	44,	90,	180,	840,	56,	82,	256,	198,	431,	39,	48,	104,	3,	18,	9,	4,	8,	37,	9,	3,	4,	1,	1,	11,	12,	6,	19,	1,	12,	5,	1,	30,	5,	0};
    
    //FLUORIDE_EQ_66nt_F
    //{5353,	1843,	462,	921,	460,	98,	42,	9,	18,	146,	86,	11,	166,	562,	45,	216,	241,	6,	16,	120,	85,	434,	2719,	157,	244,	258,	51,	232,	12,	116,	414,	68,	127,	291,	1138,	61,	58,	191,	97,	225,	26,	30,	58,	2,	31,	4,	1,	2,	44,	12,	6,	5,	4,	0,	21,	17,	8,	29,	0,	10,	10,	0,	34,	0,	0};
    
    //FLUORIDE_EQ_67nt_NF
    //{95,	30,	10,	10,	5,	2,	1,	0,	0,	2,	4,	1,	14,	24,	0,	6,	10,	0,	0,	2,	0,	8,	13,	3,	8,	16,	0,	5,	0,	5,	8,	4,	6,	8,	25,	3,	1,	14,	5,	13,	3,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	3,	0,	0,	1,	1,	0,	0};
    
    //FLUORIDE_EQ_67nt_F
    //{81,	34,	5,	14,	4,	1,	0,	0,	0,	7,	3,	3,	12,	31,	0,	7,	6,	0,	0,	1,	4,	8,	20,	1,	5,	8,	1,	3,	0,	5,	8,	3,	5,	11,	23,	4,	1,	9,	9,	11,	0,	0,	1,	0,	1,	0,	0,	0,	3,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0};
    
    //FLUORIDE_EQ_68nt_NF
    //{645,	181,	40,	66,	26,	20,	8,	0,	3,	25,	11,	2,	33,	84,	3,	39,	44,	0,	1,	14,	14,	34,	45,	5,	25,	37,	8,	17,	4,	24,	49,	9,	9,	10,	47,	3,	5,	7,	12,	28,	3,	1,	8,	0,	3,	1,	0,	1,	3,	0,	0,	2,	1,	0,	5,	0,	1,	2,	1,	3,	0,	0,	0,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_68nt_F
    //{628,	213,	49,	58,	35,	16,	7,	2,	1,	22,	13,	8,	35,	117,	12,	42,	46,	1,	6,	24,	19,	51,	88,	8,	27,	34,	10,	37,	2,	39,	45,	6,	10,	14,	81,	4,	3,	24,	18,	49,	5,	2,	8,	2,	6,	2,	0,	0,	4,	0,	0,	2,	0,	0,	3,	0,	2,	4,	0,	2,	0,	0,	3,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_69nt_NF
    //{2975,	802,	185,	169,	106,	51,	14,	4,	3,	61,	44,	6,	185,	569,	32,	162,	194,	2,	8,	36,	25,	106,	154,	22,	90,	105,	31,	74,	10,	89,	109,	11,	17,	17,	78,	5,	12,	43,	31,	79,	3,	2,	23,	2,	5,	3,	0,	1,	5,	1,	4,	0,	0,	3,	9,	5,	5,	19,	2,	6,	4,	0,	1,	0,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_69nt_F
    //{3156,	931,	228,	249,	130,	41,	19,	11,	11,	61,	46,	14,	186,	577,	37,	156,	217,	2,	6,	42,	30,	131,	264,	20,	118,	127,	44,	71,	5,	80,	121,	15,	25,	41,	103,	12,	11,	50,	53,	120,	5,	6,	18,	0,	9,	2,	0,	2,	4,	1,	2,	5,	2,	2,	2,	7,	6,	28,	2,	1,	0,	0,	0,	0,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_70nt_NF
    //{2862,	826,	176,	186,	102,	56,	18,	6,	6,	46,	50,	15,	177,	607,	38,	150,	177,	2,	6,	35,	15,	111,	174,	24,	83,	93,	38,	57,	4,	29,	63,	4,	18,	25,	79,	16,	9,	39,	32,	82,	3,	1,	23,	0,	2,	1,	0,	0,	5,	2,	3,	4,	1,	3,	17,	15,	6,	28,	0,	11,	4,	0,	2,	1,	1,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_70nt_F
    //{3173,	963,	234,	229,	124,	54,	18,	4,	6,	58,	47,	12,	164,	613,	38,	173,	169,	5,	8,	40,	19,	124,	269,	20,	131,	166,	22,	71,	4,	32,	66,	7,	21,	37,	105,	9,	17,	63,	45,	120,	5,	3,	23,	0,	5,	0,	1,	1,	9,	3,	3,	10,	6,	6,	19,	11,	5,	19,	2,	11,	3,	0,	1,	0,	0,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_71nt_NF
    //{2346,	636,	121,	119,	79,	38,	15,	3,	4,	59,	27,	8,	115,	356,	26,	92,	101,	1,	4,	29,	13,	85,	132,	11,	56,	47,	13,	34,	1,	11,	33,	2,	8,	19,	45,	5,	2,	13,	11,	25,	0,	1,	4,	0,	1,	1,	0,	3,	6,	1,	2,	3,	4,	2,	15,	21,	7,	25,	2,	11,	7,	0,	0,	0,	0,	0,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_71nt_F
    //{2811,	801,	200,	233,	105,	56,	23,	6,	8,	55,	49,	8,	150,	462,	28,	111,	159,	1,	8,	27,	19,	109,	201,	21,	79,	90,	20,	47,	2,	21,	37,	7,	18,	19,	57,	6,	4,	19,	25,	33,	2,	2,	4,	0,	4,	1,	0,	2,	7,	3,	5,	4,	1,	5,	15,	23,	9,	35,	0,	14,	5,	0,	0,	0,	0,	0,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_72nt_NF
    //{3123,	927,	163,	235,	121,	70,	16,	8,	12,	64,	58,	21,	153,	473,	25,	135,	162,	6,	6,	23,	16,	104,	146,	12,	71,	87,	24,	39,	2,	21,	29,	5,	12,	13,	34,	1,	4,	19,	9,	13,	0,	1,	16,	0,	6,	1,	1,	7,	12,	4,	10,	10,	7,	8,	57,	43,	36,	112,	3,	26,	20,	0,	1,	1,	1,	6,	4,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_72nt_F
    //{3806,	1198,	293,	311,	161,	65,	25,	8,	11,	84,	54,	13,	182,	541,	33,	155,	210,	1,	5,	42,	20,	120,	278,	30,	94,	137,	31,	30,	6,	22,	46,	4,	13,	15,	49,	2,	3,	26,	12,	17,	2,	0,	16,	0,	6,	3,	4,	9,	16,	8,	12,	26,	7,	12,	66,	56,	34,	119,	2,	33,	17,	2,	1,	1,	1,	9,	2,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_73nt_NF
    //{2829,	858,	159,	199,	96,	73,	20,	6,	8,	47,	41,	12,	190,	557,	27,	116,	146,	5,	1,	47,	12,	97,	154,	21,	78,	87,	30,	36,	3,	20,	48,	3,	10,	18,	40,	3,	2,	15,	18,	27,	1,	0,	2,	0,	1,	1,	2,	4,	8,	3,	1,	5,	3,	7,	23,	32,	18,	51,	1,	19,	9,	0,	0,	0,	0,	5,	1,	0,	1,	6,	0,	0};
    
    //FLUORIDE_EQ_73nt_F
    //{4002,	1307,	274,	350,	174,	66,	20,	4,	9,	72,	56,	12,	229,	779,	50,	189,	214,	5,	6,	35,	19,	154,	303,	32,	135,	169,	47,	69,	1,	41,	64,	6,	13,	25,	77,	6,	5,	40,	35,	46,	1,	0,	1,	0,	5,	2,	0,	14,	15,	4,	6,	6,	5,	6,	48,	38,	32,	96,	1,	27,	6,	0,	1,	0,	0,	4,	0,	0,	3,	9,	0,	0};
    
    //FLUORIDE_EQ_74nt_NF
    //{7050,	2112,	384,	456,	264,	150,	45,	12,	13,	115,	116,	44,	448,	1253,	64,	208,	254,	4,	8,	69,	39,	258,	350,	34,	169,	204,	62,	90,	7,	56,	84,	11,	23,	33,	100,	7,	9,	37,	34,	65,	3,	7,	2,	0,	7,	0,	1,	5,	15,	8,	6,	12,	7,	18,	51,	36,	29,	118,	2,	33,	14,	0,	1,	0,	0,	7,	5,	0,	3,	2,	5,	0,	0};
    
    //FLUORIDE_EQ_74nt_F
    //{9331,	2767,	638,	762,	402,	179,	69,	17,	20,	192,	147,	39,	521,	1557,	81,	297,	345,	7,	11,	94,	64,	309,	596,	54,	257,	321,	67,	126,	4,	83,	135,	10,	32,	65,	184,	20,	11,	87,	52,	101,	3,	0,	6,	0,	8,	2,	1,	13,	20,	10,	12,	20,	9,	18,	71,	46,	42,	122,	2,	36,	16,	1,	0,	0,	0,	14,	10,	0,	3,	3,	7,	0,	0};
    
    //FLUORIDE_EQ_75nt_NF
    //{5803,	1666,	317,	371,	192,	107,	37,	13,	13,	90,	98,	34,	385,	1299,	87,	270,	371,	4,	19,	61,	33,	191,	349,	38,	183,	180,	51,	81,	6,	38,	67,	2,	17,	24,	104,	5,	4,	37,	18,	35,	1,	2,	3,	0,	5,	2,	4,	15,	13,	1,	4,	17,	5,	10,	49,	39,	35,	136,	3,	46,	19,	0,	2,	0,	0,	5,	3,	0,	3,	3,	1,	0,	0,	0};
    
    //FLUORIDE_EQ_75nt_F
    //{7223,	2101,	505,	496,	311,	131,	33,	12,	15,	132,	87,	22,	397,	1386,	74,	295,	403,	6,	14,	71,	39,	263,	492,	35,	181,	249,	70,	127,	6,	53,	88,	8,	24,	43,	146,	14,	11,	47,	36,	53,	3,	1,	4,	0,	9,	2,	2,	11,	28,	4,	7,	19,	3,	6,	73,	40,	28,	121,	2,	50,	8,	0,	1,	0,	2,	7,	2,	0,	4,	1,	2,	0,	0,	0};
    
    //FLUORIDE_EQ_76nt_NF
    //{3797,	1052,	201,	250,	129,	68,	22,	6,	8,	71,	59,	17,	249,	822,	42,	197,	216,	5,	9,	43,	20,	133,	209,	20,	103,	117,	42,	67,	2,	39,	57,	5,	22,	29,	52,	2,	5,	18,	12,	15,	1,	1,	0,	0,	6,	3,	1,	9,	14,	9,	6,	8,	5,	8,	46,	35,	30,	107,	1,	27,	15,	1,	3,	0,	3,	10,	0,	0,	0,	2,	8,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_76nt_F
    //{4726,	1381,	306,	360,	182,	90,	21,	7,	8,	107,	77,	20,	291,	926,	56,	232,	303,	3,	9,	35,	26,	161,	346,	38,	159,	183,	41,	90,	5,	45,	60,	7,	20,	23,	111,	14,	10,	37,	27,	36,	1,	1,	3,	1,	7,	4,	0,	14,	27,	6,	5,	14,	4,	6,	62,	37,	29,	118,	6,	36,	17,	0,	0,	0,	2,	8,	2,	0,	0,	0,	6,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_77nt_NF
    //{4864,	1501,	274,	342,	180,	116,	28,	5,	16,	98,	76,	22,	339,	1109,	69,	256,	291,	5,	13,	63,	44,	165,	330,	32,	158,	186,	61,	117,	4,	65,	72,	8,	24,	43,	122,	9,	5,	33,	28,	26,	2,	0,	5,	0,	6,	3,	1,	9,	26,	11,	15,	17,	7,	10,	88,	57,	58,	178,	4,	63,	30,	2,	1,	1,	0,	17,	5,	0,	1,	2,	12,	38,	8,	74,	190,	0};
    
    //FLUORIDE_EQ_77nt_F
    //{6101,	1806,	374,	476,	266,	144,	43,	10,	13,	122,	100,	25,	358,	1307,	73,	307,	387,	8,	16,	66,	45,	228,	481,	40,	249,	226,	60,	133,	4,	75,	88,	7,	35,	46,	167,	11,	13,	62,	33,	56,	2,	2,	10,	0,	16,	4,	6,	15,	52,	12,	10,	21,	16,	10,	116,	71,	59,	229,	3,	65,	30,	1,	3,	3,	1,	20,	5,	0,	0,	6,	3,	46,	5,	96,	157,	0};
    
    //FLUORIDE_EQ_78nt_NF
    //{4839,	1408,	283,	310,	191,	134,	35,	13,	14,	94,	91,	33,	314,	1224,	62,	256,	351,	3,	18,	76,	32,	182,	343,	34,	193,	176,	65,	97,	5,	79,	10,9,	12,	28,	40,	119,	5,	10,	39,	21,	39,	1,	1,	6,	0,	5,	1,	3,	22,	36,	12,	18,	24,	6,	7,	106,	68,	65,	261,	8,	81,	38,	2,	3,	0,	2,	12,	5,	1,	3,	3,	7,	49,	14,	19,	125,	0,	0};
    
    //FLUORIDE_EQ_78nt_F
    //{5532,	1690,	393,	505,	264,	121,	41,	17,	15,	131,	91,	25,	366,	1311,	69,	368,	404,	7,	14,	69,	47,	228,	476,	36,	232,	269,	61,	136,	7,	71,	122,	11,	29,	53,	178,	18,	19,	113,	56,	45,	3,	2,	6,	0,	15,	4,	4,	14,	31,	9,	13,	29,	6,	6,	122,	78,	85,	288,	2,	83,	37,	0,	2,	1,	3,	20,	8,	0,	2,	5,	13,	62,	14,	15,	128,	0,	0};
    
    //FLUORIDE_EQ_79nt_NF
    //{7084,	2099,	408,	506,	256,	206,	41,	12,	24,	182,	159,	46,	565,	2025,	113,	477,	586,	10,	16,	84,	82,	321,	668,	65,	319,	311,	103,	166,	11,	116,	156,	27,	50,	70,	219,	27,	12,	60,	36,	65,	2,	5,	4,	0,	21,	4,	8,	42,	67,	24,	38,	41,	22,	33,	282,	174,	175,	530,	5,	200,	81,	3,	5,	4,	8,	23,	5,	0,	5,	4,	11,	62,	17,	57,	115,	0,	0,	0};
    
    //FLUORIDE_EQ_79nt_F
    //{8539,	2542,	603,	644,	388,	229,	49,	11,	28,	243,	173,	45,	584,	2290,	144,	594,	747,	16,	23,	123,	84,	427,	965,	93,	406,	451,	119,	218,	16,	142,	202,	16,	60,	107,	317,	26,	20,	104,	77,	85,	3,	10,	6,	0,	25,	6,	12,	52,	85,	23,	38,	84,	32,	30,	298,	185,	186,	561,	7,	232,	85,	4,	2,	2,	6,	42,	10,	0,	7,	0,	8,	79,	16,	55,	107,	0,	0,	0};
    
    //FLUORIDE_EQ_80nt_NF
    //{9481,	2773,	678,	856,	473,	400,	134,	41,	51,	404,	381,	99,	1254,	4229,	349,	1294,	1379,	31,	69,	288,	198,	647,	891,	83,	516,	538,	128,	392,	36,	308,	487,	46,	119,	193,	451,	32,	31,	156,	124,	167,	5,	7,	23,	1,	79,	21,	22,	147,	253,	65,	147,	208,	103,	124,	940,	576,	497,	1954,	31,	618,	341,	5,	22,	4,	28,	93,	16,	2,	28,	18,	12,	181,	29,	125,	285,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_80nt_F
    //{10445,	3254,	911,	1103,	668,	462,	134,	55,	82,	483,	403,	114,	1370,	4878,	378,	1537,	1582,	33,	61,	309,	191,	890,	1296,	167,	681,	741,	207,	470,	39,	404,	594,	48,	169,	307,	664,	61,	97,	349,	213,	291,	21,	25,	26,	1,	91,	31,	28,	127,	235,	70,	152,	203,	123,	105,	919,	613,	575,	1975,	43,	734,	270,	6,	21,	8,	31,	150,	42,	2,	45,	19,	28,	180,	32,	148,	286,	0,	0,	0,	0};
    
    vector<int>SEQMinusReads=
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////    WIDE TYPE DATA   ////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    
    //FLUORIDE_CO_26nt_NF 40-14=26. Total 25 reads, 24nt + 1 complete
    //{1874,482,200,70,32,0,7,1,4,43,10,2,5,13,2,7,20,0,0,9,1,26,17,5,8};
    //FLUORIDE_CO_26nt_F 40-14=26
    //{1814,486,201,103,56,0,7,4,3,30,16,1,11,16,1,8,19,1,1,6,3,35,22,9,5};
    
    
    
    //FLUORIDE_CO_55nt_NF
    //{2724,	728,	244,	82,	43,	2,	6,	0,	2,	56,	15,	0,	19,	28,	1,	16,	29,	1,	2,	14,	9,	82,	73,	15,	43,	40,	2,	18,	2,	17,	17,	6,	11,	17,	15,	1,	3,	16,	11,	40,	1,	0,	3,	0,	5,	1,	0,	1,	0,	0,	1,	2,	3,	1};
    //FLUORIDE_CO_55nt_F
    //{2834,	875,	272,	165,	135,	3,	9,	3,	9,	46,	27,	2,	20,	53,	4,	17,	33,	0,	8,	14,	12,	105,	106,	25,	34,	51,	6,	41,	9,	24,	39,	7,	11,	16,	54,	2,	2,	37,	17,	32,	6,	2,	4,	0,	6,	1,	0,	2,	4,	2,	4,	8,	3,	1};
    
    //FLUORIDE_CO_56nt_NF
    //{	3599,	1008,	317,	96,	55,	0,	11,	3,	2,	76,	19,	1,	16,	40,	5,	19,	27,	1,	4,	18, 	10,	98,	129,	43,	46,	48,	1,	32,	5,	13,	18,	4,	10,	10,	29,	1,	1,	31,	14,	26,	1,	0,	2,	0,	3,	0,	0,	2,	6,	2,	4,	6,	0,	3,	6};
    //FLUORIDE_CO_56nt_F
    //{3048,	941,	287,	213,	130,	3,	14,	5,	4,	57,	36,	1,	19,	38,	2,	11,	26,	0,	8,	18,	16,	89,	124,	30,	40,	50,	3,	27,	3,	20,	25,	5,	12,	11,	43,	2,	4,	23,	12,	22,	5,	0,	5,	1,	3,	1,	0,	2,	1,	3,	3,	4,	1,	2,	13};
    
    //FLUORIDE_CO_57nt_NF
   //{2966,	834,	244,	84,	45,	0,	2,	1,	3,	44,	13,	3,	13,	28,	2,	7,	19,	3,	6,	15,	8,	76,	114,	27,	21,	34,	3,	21,	1,	8,	8,	3,	4,	3,	12,	0,	0,	14,	5,	9,	1,	0,	0,	0,	0,	1,	1,	7,	4,	3,	3,	3,	2,	1,	8,	2};
    //FLUORIDE_CO_57nt_F
    //{2488,	792,	186,	171,	119,	0,	11,	4,	3,	42,	27,	0,	19,	16,	1,	8,	14,	1,	2,	9,	8,	64,	91,	22,	30,	34,	4,	15,	1,	7,	10,	2,	5,	7,	27,	5,	2,	17,	9,	3,	2,	0,	2,	0,	2,	0,	1,	5,	4,	4,	4,	6,	1,	1,	11,	11};
    
    //FLUORIDE_CO_58nt_NF
    //{3180,	909,	239,	94,	42,	3,	7,	1,	5,	47,	19,	2,	3,	28,	3,	16,	22,	0,	4,	8,	10,	91,	78,	24,	26,	33,	3,	13,	1,	4,	5,	2,	10,	2,	15,	1,	0,	11,	2,	1,	0,	0,	0,	0,	3,	1,	4,	4,	3,	1,	4,	15,	4,	8,	29,	5,	0};
    //FLUORIDE_CO_58nt_F
    //{3144,	1098,	303,	295,	171,	3,	16,	7,	13,	48,	53,	2,	15,	49,	0,	17,	26,	0,	6,	11,	9,	104,	101,	25,	75,	158,	5,	22,	4,	13,	12,	1,	9,	9,	46,	1,	3,	12,	6,	2,	1,	0,	2,	0,	8,	3,	2,	11,	13,	10,	6,	35,	10,	12,	60,	19,	10};
    
    //FLUORIDE_CO_59nt_NF
    //{4355,	1373,	373,	140,	81,	1,	11,	1,	5,	70,	17,	1,	18,	38,	4,	24,	38,	2,	7,	11,	10,	111,	166,	37,	42,	45,	2,	25,	2,	11,	10,	3,	14,	5,	19,	2,	1,	21,	7,	10,	0,	0,	1,	0,	2,	0,	2,	6,	9,	0,	1,	7,	3,	10,	27,	8,	2,	41};
    //FLUORIDE_CO_59nt_F
    //{1920,	648,	155,	163,	94,	1,	5,	2,	1,	41,	27,	1,	10,	22,	3,	9,	7,	0,	4,	9,	11,	45,	56,	14,	35,	29,	3,	21,	2,	12,	11,	0,	8,	11,	54,	0,	0,	10,	6,	6,	0,	0,	1,	0,	0,	1,	1,	8,	2,	2,	2,	5,	2,	2,	26,	7,	5,	62};
    
    //FLUORIDE_CO_60nt_NF
    //{7048,	2204,	632,	214,	110,	2,	17,	4,	5,	120,	33,	1,	25,	70,	3,	19,	37,	4,	6,	20,	24,	195,	202,	46,	81,	71,	8,	45,	3,	18,	20,	5,	19,	22,	38,	3,	5,	23,	11,	11,	2,	0,	1,	0,	7,	0,	1,	9,	11,	9,	6,	13,	11,	11,	37,	11,	1,	43,	0};
    ////FLUORIDE_CO_60nt_F
    //{5473,	1840,	495,	433,	281,	4,	16,	6,	10,	77,	55,	1,	28,	81,	2,	20,	32,	0,	12,	11,	22,	171,	188,	35,	65,	79,	2,	48,	7,	26,	39,	2,	13,	17,	86,	2,	1,	35,	12,	17,	0,	0,	2,	0,	1,	2,	4,	10,	15,	7,	9,	19,	17,	7,	29,	13,	6,	119,	2};
    
    //FLUORIDE_CO_61nt_NF
    //{4774,	1430,	392,	148,	81,	3,	9,	2,	8,	75,	18,	1,	24,	38,	1,	20,	28,	1,	6,	11,	15,	124,	182,	32,	54,	64,	4,	22,	3,	12,	9,	8,	17,	11,	27,	5,	2,	26,	13,	6,	0,	0,	0,	0,	6,	1,	2,	7,	15,	6,	5,	14,	3,	11,	35,	7,	6,	53,	0,	3};
    //FLUORIDE_CO_61nt_F
    //{4963,	1642,	423,	386,	226,	4,	9,	2,	14,	83,	50,	4,	26,	55,	6,	24,	37,	2,	13,	22,	16,	144,	188,	46,	86,	78,	7,	45,	2,	20,	23,	3,	21,	19,	77,	5,	1,	22,	9,	7,	0,	0,	2,	0,	5,	0,	7,	21,	15,	3,	7,	19,	8,	7,	51,	8,	8,	144,	0,	9};
    
    //FLUORIDE_CO_62nt_NF
    //{3711,	1037,	258,	102,	56,	1,	7,	1,	3,	61,	16,	1,	7,	38,	2,	18,	38,	2,	1,	10,	12,	96,	127,	25,	43,	33,	2,	16,	4,	11,	7,	2,	28,	14,	25,	1,	0,	25,	5,	5,	0,	0,	4,	0,	3,	0,	2,	8,	5,	6,	4,	14,	3,	5,	41,	10,	1,	54,	0,	3,	4};
    //FLUORIDE_CO_62nt_F
    //{3350,	1038,	272,	206,	139,	3,	6,	2,	1,	48,	31,	2,	16,	37,	5,	17,	35,	2,	5,	15,	12,	90,	109,	25,	33,	53,	2,	20,	4,	21,	30,	3,	16,	11,	62,	2,	3,	13,	6,	3,	2,	0,	3,	0,	2,	2,	5,	11,	8,	5,	6,	27,	6,	5,	36,	13,	15,	107,	2,	6,	15};
    
    //FLUORIDE_CO_63nt_NF
    //{6060,	1696,	466,	178,	107,	3,	11,	3,	8,	98,	28,	3,	21,	58,	2,	25,	57,	1,	3,	25,	19,	169,	265,	40,	98,	78,	4,	31,	5,	15,	21,	4,	28,	17,	85,	2,	3,	38,	13,	10,	1,	0,	5,	1,	18,	3,	13,	25,	27,	5,	10,	35,	13,	12,	74,	16,	12,	184,	3,	14,	12,	0};
    //FLUORIDE_CO_63nt_F
    //{4189,	1241,	341,	293,	197,	2,	14,	3,	9,	50,	47,	1,	27,	48,	1,	27,	36,	0,	7,	16,	25,	138,	190,	40,	60,	67,	5,	47,	6,	21,	27,	4,	23,	26,	162,	5,	2,	21,	13,	6,	0,	0,	5,	0,	17,	4,	6,	9,	13,	9,	10,	45,	11,	6,	67,	10,	16,	235,	0,	15,	33,	1	};
    
    //FLUORIDE_CO_64nt_NF
    //{13953,	3549,	1057,	507,	260,	4,	23,	7,	16,	204,	75,	3,	33,	124,	6,	58,	140,	7,	16,	43,	54,	396,	548,	110,	215,	196,	10,	122,	15,	52,	52,	10,	60,	68,	295,	12,	8,	198,	56,	31,	0,	0,	6,	1,	25,	16,	14,	52,	51,	18,	30,	76,	36,	33,	146,	37,	22,	414,	2,	36,	34,	0,	12	};
    //FLUORIDE_CO_64nt_F
    //{4362,	1383,	382,	343,	254,	4,	18,	4,	10,	88,	58,	5,	20,	73,	5,	21,	37,	2,	6,	13,	24,	145,	187,	46,	85,	76,	8,	52,	9,	35,	40,	2,	21,	26,	193,	6,	2,	24,	12,	11,	0,	0,	2,	0,	11,	4,	8,	26,	16,	9,	25,	63,	16,	9,	87,	18,	24,	333,	2,	21,	39,	1,	6};
    
    //FLUORIDE_CO_65nt_NF
    //{47348,	12098,	3462,	1299,	649,	15,	104,	29,	52,	806,	188,	6,	129,	382,	30,	223,	408,	14,	46,	149,	137,	1362,	2176,	401,	844,	664,	31,	318,	44,	138,	144,	29,	191,	138,	553,	20,	18,	326,	110,	91,	6,	0,	26,	1,	111,	38,	58,	237,	217,	66,	159,	376,	138,	131,	851,	169,	116,	1285,	13,	136,	150,	4,	33,	9};
    //FLUORIDE_CO_65nt_F
    //{7011,	2210,	615,	559,	349,	12,	16,	7,	10,	130,	101,	7,	41,	141,	15,	53,	69,	6,	26,	37,	38,	267,	472,	65,	137,	120,	6,	85,	6,	52,	56,	10,	33,	61,	298,	11,	8,	41,	25,	18,	1,	0,	8,	4,	31,	7,	10,	44,	38,	17,	36,	145,	51,	29,	225,	56,	50,	780,	11,	38,	110,	5,	6,	5};
    
    //FLUORIDE_CO_66nt_NF
    //{276017,	74261,	21432,	8964,	4465,	86,	668,	162,	275,	4579,	1186,	83,	737,	2262,	185,	1413,	2410,	64,	258,	957,	869,	8442,	14017,	2298,	6073,	4126,	162,	2516,	193,	1012,	1021,	208,	1218,	1144,	4911,	159,	145,	3893,	1175,	800,	36,	7,	187,	19,	917,	264,	478,	1901,	1880,	523,	1507,	3106,	1249,	1064,	6977,	1439,	979,	14120,	133,	1349,	1296,	44,	273,	98,	484};
    //FLUORIDE_CO_66nt_F
    //{10580,	3443,	1127,	995,	651,	23,	71,	17,	53,	307,	285,	26,	165,	421,	51,	163,	153,	6,	50,	146,	146,	668,	560,	132,	277,	282,	24,	177,	17,	167,	196,	27,	112,	124,	832,	28,	15,	161,	63,	61,	3,	1,	11,	5,	116,	35,	59,	170,	159,	62,	176,	440,	133,	116,	1023,	229,	223,	3483,	29,	241,	534,	9,	47,	8,	34	};
    
    //FLUORIDE_CO_67nt_NF
    //{72009,	19469,	5708,	2107,	1122,	17,	169,	44,	85,	1261,	332,	22,	191,	636,	49,	383,	619,	13,	90,	269,	253,	2240,	3820,	623,	1574,	1102,	44,	671,	44,	232,	248,	53,	334,	254,	942,	30,	45,	780,	262,	234,	17,	1,	61,	3,	319,	87,	143,	632,	702,	141,	498,	1088,	393,	357,	2322,	385,	319,	4904,	56,	453,	482,	18,	77,	27,	154,	764};
    //FLUORIDE_CO_67nt_F
    //{4716,	1524,	499,	405,	290,	9,	24,	10,	25,	124,	94,	6,	50,	119,	12,	51,	78,	1,	18,	43,	39,	237,	270,	56,	112,	100,	10,	99,	11,	66,	64,	8,	46,	43,	307,	7,	5,	60,	23,	19,	0,	0,	10,	1,	49,	16,	15,	89,	95,	28,	96,	225,	84,	64,	444,	96,	112,	1793,	10,	111,	279,	6,	14,	4,	25,	99	};
    
    //FLUORIDE_CO_68nt_NF
    //{105911,	29332,	8263,	3325,	1648,	45,	296,	64,	132,	1898,	495,	45,	305,	899,	71,	600,	982,	24,	119,	356,	387,	3446,	5723,	949,	2226,	1621,	67,	1076,	85,	390,	351,	79,	469,	322,	1465,	61,	51,	1315,	417,	384,	24,	4,	106,	10,	567,	154,	290,	1123,	1290,	277,	825,	1842,	683,	635,	4004,	783,	573,	9856,	96,	988,	927,	45,	109,	63,	280,	1342,	582};
    //FLUORIDE_CO_68nt_F
    //{7291,	2409,	745,	704,	479,	12,	60,	14,	43,	201,	169,	8,	86,	233,	17,	93,	106,	4,	33,	60,	79,	374,	432,	97,	199,	204,	13,	138,	13,	76,	123,	17,	65,	64,	439,	11,	8,	113,	49,	37,	3,	2,	15,	0,	105,	25,	53,	199,	179,	49,	153,	433,	143,	100,	791,	194,	227,	3739,	20,	202,	601,	11,	34,	7,	52,	199,	96};
    
    //FLUORIDE_CO_69nt_NF
    //{190,	53,	14,	6,	6,	0,	0,	0,	3,	4,	1,	1,	0,	2,	0,	3,	2,	0,	0,	1,	1,	6,	12,	0,	4,	2,	0,	1,	0,	1,	1,	0,	0,	0,	5,	0,	1,	5,	1,	1,	0,	0,	1,	0,	0,	0,	1,	3,	3,	0,	2,	3,	2,	2,	7,	4,	1,	13,	0,	1,	1,	3,	0,	0,	2,	10,	6,	0};
    //FLUORIDE_CO_69nt_F
    //{413,	123,	29,	30,	19,	0,	1,	1,	1,	11,	4,	0,	1,	1,	0,	2,	8,	1,	3,	3,	6,	13,	28,	4,	13,	9,	0,	8,	0,	2,	1,	1,	6,	5,	21,	0,	0,	2,	2,	2,	0,	0,	2,	0,	10,	0,	1,	5,	11,	2,	6,	25,	4,	4,	37,	3,	10,	148,	0,	11,	23,	1,	3,	0,	2,	6,	3,	1	};
    
    //FLUORIDE_CO_70nt_NF
    //{402,	123,	34,	11,	10,	0,	4,	1,	0,	4,	3,	1,	1,	3,	0,	1,	4,	0,	0,	0,	4,	5,	19,	2,	5,	6,	0,	1,	0,	2,	0,	0,	1,	1,	6,	0,	0,	4,	4,	0,	0,	0,	0,	0,	3,	1,	3,	5,	4,	1,	0,	7,	3,	1,	17,	2,	4,	44,	1,	2,	3,	0,	0,	0,	2,	8,	2,	0,	5};
    //FLUORIDE_CO_70nt_F
    //{1256,	370,	103,	73,	66,	0,	4,	4,	2,	28,	11,	0,	1,	17,	1,	5,	6,	0,	4,	4,	2,	45,	60,	9,	18,	21,	1,	20,	1,	18,	10,	2,	5,	6,	44,	0,	1,	14,	10,	4,	0,	0,	1,	0,	9,	0,	6,	16,	16,	8,	12,	43,	24,	7,	62,	19,	30,	404,	1,	29,	65,	3,	2,	1,	3,	14,	3,	0,	6};
    
    //FLUORIDE_CO_71nt_NF
    //{492,	145,	56,	18,	14,	0,	1,	1,	0,	5,	2,	0,	2,	6,	2,	3,	3,	0,	0,	4,	1,	20,	31,	9,	22,	12,	0,	2,	1,	2,	3,	0,	4,	4,	14,	0,	0,	7,	6,	2,	0,	0,	1,	0,	2,	0,	1,	3,	4,	0,	5,	9,	2,	2,	15,	2,	4,	57,	1,	9,	3,	0,	0,	1,	3,	16,	2,	0,	9,	0	};
    //FLUORIDE_CO_71nt_F
    //{1777,	563,	157,	156,	93,	1,	6,	3,	2,	25,	19,	1,	11,	25,	1,	10,	23,	0,	7,	10,	10,	77,	138,	24,	72,	67,	2,	50,	2,	20,	26,	1,	8,	8,	72,	0,	0,	21,	15,	8,	1,	0,	7,	0,	10,	4,	9,	32,	34,	7,	15,	60,	20,	4,	97,	20,	32,	665,	3,	31,	120,	0,	2,	1,	10,	54,	12,	1,	15,	0};
    
    //FLUORIDE_CO_72nt_NF
    //{342,	117,	28,	17,	8,	0,	2,	0,	2,	9,	3,	0,	1,	4,	2,	1,	6,	0,	0,	1,	1,	18,	30,	1,	9,	9,	0,	5,	0,	3,	3,	0,	2,	3,	10,	1,	0,	7,	5,	0,	0,	0,	0,	0,	3,	0,	0,	3,	2,	1,	0,	2,	5,	1,	20,	4,	5,	41,	0,	4,	3,	1,	0,	1,	12,	29,	10,	0,	6,	0,	1};
    //FLUORIDE_CO_72nt_F
    //{1707,	560,	180,	164,	92,	1,	5,	1,	1,	42,	13,	1,	11,	16,	1,	10,	23,	0,	9,	10,	11,	80,	171,	28,	69,	68,	2,	51,	2,	29,	23,	2,	10,	16,	95,	2,	4,	20,	20,	2,	1,	0,	1,	0,	8,	0,	2,	20,	21,	9,	14,	52,	17,	9,	92,	15,	36,	557,	9,	35,	103,	3,	6,	1,	25,	103,	21,	0,	23,	1,	2	};
    
    //FLUORIDE_CO_73nt_NF
    //{325,	113,	27,	13,	4,	2,	0,	0,	0,	3,	1,	0,	0,	3,	0,	1,	1,	0,	0,	2,	2,	18,	27,	4,	6,	5,	0,	2,	0,	1,	2,	1,	1,	1,	5,	0,	0,	7,	4,	1,	0,	0,	0,	0,	2,	0,	2,	4,	3,	4,	3,	5,	1,	0,	17,	2,	2,	36,	2,	7,	3,	0,	1,	0,	6,	7,	0,	0,	1,	1,	1,	8};
    //FLUORIDE_CO_73nt_F
    //{2213,	698,	196,	139,	88,	2,	6,	2,	3,	37,	33,	0,	12,	32,	2,	20,	24,	0,	4,	11,	11,	94,	220,	36,	73,	59,	3,	55,	3,	20,	16,	8,	5,	8,	66,	2,	3,	24,	16,	7,	2,	0,	1,	0,	14,	5,	9,	34,	30,	8,	18,	71,	22,	12,	131,	31,	30,	916,	4,	45,	152,	4,	7,	2,	20,	45,	15,	0,	8,	4,	6,	27};
    
    //FLUORIDE_CO_74nt_NF
    //{344,	98,	29,	26,	12,	1,	0,	0,	0,	6,	4,	0,	1,	0,	0,	1,	5,	0,	1,	1,	1,	12,	13,	6,	11,	7,	0,	3,	0,	3,	1,	0,	1,	2,	15,	0,	0,	8,	5,	0,	0,	0,	0,	0,	3,	1,	1,	0,	6,	1,	7,	5,	8,	4,	12,	4,	5,	81,	1,	11,	5,	0,	2,	1,	26,	108,	11,	1,	22,	2,	6,	15,	1};
    //FLUORIDE_CO_74nt_F
    //{1993,	629,	195,	127,	94,	0,	7,	1,	3,	34,	32,	0,	8,	28,	1,	15,	15,	2,	3,	10,	12,	95,	126,	37,	69,	72,	4,	45,	4,	11,	18,	4,	12,	9,	61,	1,	2,	21,	16,	5,	2,	0,	3,	0,	16,	1,	5,	32,	22,	8,	15,	72,	20,	13,	162,	24,	67,	1145,	6,	49,	167,	4,	14,	10,	109,	350,	87,	3,	106,	9,	13,	34,	3};
    
    //FLUORIDE_CO_75nt_NF
    //{599,	187,	60,	34,	14,	1,	0,	1,	1,	7,	2,	0,	2,	3,	0,	7,	8,	0,	1,	3,	4,	17,	41,	5,	22,	25,	1,	7,	1,	3,	2,	3,	6,	7,	15,	1,	1,	16,	7,	1,	0,	0,	0,	0,	6,	1,	2,	7,	1,	2,	1,	12,	2,	7,	34,	7,	3,	69,	1,	12,	13,	0,	2,	0,	11,	37,	8,	1,	3,	0,	1,	15,	1,	5};
    //FLUORIDE_CO_75nt_F
    //{2638,	915,	238,	185,	139,	1,	12,	4,	4,	48,	42,	2,	12,	31,	6,	17,	25,	0,	2,	8,	17,	133,	206,	41,	81,	117,	4,	70,	4,	19,	17,	5,	15,	17,	130,	4,	2,	31,	26,	11,	4,	0,	7,	1,	9,	2,	8,	33,	33,	16,	26,	91,	36,	23,	182,	44,	56,	1116,	6,	74,	212,	7,	13,	6,	23,	115,	23,	4,	26,	4,	5,	21,	2,	14		};
    
    //FLUORIDE_CO_76nt_NF
    //{417,	146,	29,	16,	6,	0,	1,	0,	0,	6,	4,	1,	1,	3,	0,	5,	4,	0,	1,	4,	2,	13,	15,	6,	3,	9,	0,	1,	0,	2,	0,	1,	0,	1,	8,	0,	0,	13,	4,	0,	0,	0,	0,	0,	2,	2,	2,	10,	9,	1,	2,	7,	1,	3,	25,	5,	3,	51,	0,	8,	4,	0,	1,	1,	5,	23,	6,	0,	3,	0,	6,	4,	0,	1,	5};
    //FLUORIDE_CO_76nt_F
    {1442,	500,	145,	100,	76,	1,	6,	2,	2,	16,	27,	0,	5,	15,	2,	6,	20,	2,	5,	8,	5,	73,	84,	19,	31,	50,	4,	32,	1,	13,	7,	2,	5,	8,	73,	3,	0,	25,	12,	7,	0,	0,	5,	2,	8,	2,	1,	30,	19,	6,	14,	54,	19,	8,	97,	33,	32,	787,	6,	38,	124,	2,	5,	3,	29,	77,	26,	0,	20,	4,	9,	12,	1,	7,	30};
    
    //FLUORIDE_CO_77nt_NF
    //{777,	225,	75,	24,	10,	0,	2,	1,	3,	16,	4,	0,	1,	8,	0,	3,	8,	0,	1,	2,	3,	26,	29,	9,	19,	18,	1,	8,	1,	3,	4,	0,	4,	5,	29,	0,	0,	17,	8,	1,	0,	1,	1,	0,	4,	1,	3,	11,	9,	3,	8,	11,	12,	4,	41,	10,	5,	115,	1,	9,	11,	1,	4,	1,	17,	50,	10,	0,	10,	2,	6,	8,	0,	4,	8,	3};
    
    //FLUORIDE_CO_77nt_F
    //{2498,	802,	207,	185,	117,	1,	12,	3,	8,	47,	30,	1,	16,	21,	1,	22,	31,	0,	6,	15,	10,	110,	148,	31,	72,	92,	1,	44,	9,	25,	15,	3,	21,	22,	110,	5,	2,	28,	20,	9,	3,	0,	4,	0,	14,	4,	9,	33,	33,	17,	33,	98,	51,	19,	194,	58,	83,	1166,	13,	87,	231,	5,	26,	9,	43,	135,	32,	2,	37,	6,	10,	29,	6,	7,	51,	10};
    
    //FLUORIDE_CO_78nt_NF
    //{1259,	380,	126,	57,	36,	1,	6,	0,	1,	23,	9,	1,	5,	11,	2,	10,	14,	0,	3,	7,	6,	52,	53,	13,	18,	26,	1,	12,	0,	9,	5,	1,	8,	7,	57,	0,	3,	27,	18,	0,	0,	0,	2,	0,	8,	5,	5,	22,	22,	2,	13,	28,	17,	14,	79,	16,	16,	353,	3,	34,	24,	3,	9,	8,	112,	511,	83,	4,	127,	12,	21,	52,	7,	13,	17,	5,	7};
    //FLUORIDE_CO_78nt_F
    //{3474,	1117,	370,	245,	190,	7,	15,	2,	5,	65,	81,	1,	16,	37,	1,	26,	38,	1,	5,	22,	14,	188,	199,	59,	145,	146,	5,	79,	4,	28,	24,	8,	20,	18,	200,	4,	5,	48,	32,	15,	4,	0,	8,	0,	21,	7,	21,	65,	65,	17,	50,	132,	48,	19,	346,	70,	127,	2521,	10,	130,	421,	5,	37,	27,	253,	808,	158,	8,	280,	21,	31,	81,	3,	31,	72,	14,	13};
    
    //FLUORIDE_CO_79nt_NF
    //{936,	309,	114,	53,	50,	0,	3,	0,	2,	17,	4,	1,	2,	12,	2,	6,	7,	1,	0,	3,	2,	39,	47,	17,	21,	24,	2,	9,	3,	11,	9,	1,	9,	6,	42,	1,	1,	20,	14,	5,	2,	0,	0,	0,	7,	2,	1,	13,	15,	0,	15,	26,	8,	8,	68,	8,	8,	339,	1,	38,	26,	4,	10,	11,	170,	728,	145,	4,	216,	7,	14,	22,	3,	11,	14,	2,	5,	7};
    //FLUORIDE_CO_79nt_F
    //{2560,	817,	285,	219,	205,	2,	2,	1,	6,	50,	53,	3,	6,	22,	4,	19,	23,	0,	4,	8,	18,	123,	172,	47,	75,	123,	7,	52,	3,	20,	13,	1,	14,	11,	145,	4,	6,	30,	24,	4,	0,	1,	4,	0,	17,	8,	10,	34,	54,	13,	35,	110,	49,	21,	302,	70,	118,	2139,	9,	105,	321,	3,	39,	48,	418,	1381,	288,	10,	424,	11,	23,	43,	8,	24,	51,	15,	13,	15};
    
    //FLUORIDE_CO_80nt_NF
    //{722,	202,	67,	40,	19,	0,	0,	2,	1,	10,	5,	0,	1,	8,	1,	7,	7,	0,	1,	3,	5,	24,	23,	7,	10,	18,	0,	9,	0,	3,	1,	2,	1,	6,	30,	0,	0,	15,	12,	1,	0,	0,	3,	0,	8,	2,	2,	9,	12,	3,	6,	8,	4,	8,	58,	6,	2,	154,	2,	16,	21,	0,	8,	2,	33,	181,	38,	0,	53,	8,	6,	14,	2,	4,	13,	3,	5,	4,	3};
    //FLUORIDE_CO_80nt_F
    //{2048,	661,	212,	136,	114,	2,	7,	3,	4,	28,	31,	0,	8,	19,	3,	12,	27,	2,	10,	13,	11,	104,	121,	31,	62,	86,	1,	30,	6,	22,	20,	4,	12,	20,	133,	4,	0,	38,	17,	11,	1,	0,	3,	0,	18,	0,	8,	45,	36,	22,	25,	79,	25,	12,	212,	39,	73,	1293,	5,	81,	187,	7,	32,	19,	126,	379,	84,	4,	147,	11,	13,	22,	4,	15,	50,	3,	6,	5,	4};
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////    MUTANTS DATA   //////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    
    //FLUORIDE_CO_73nt_M18_NF
    //{925,	245,	76,	29,	19,	0,	1,	0,	2,	25,	10,	0,	95,	17,	1,	13,	12,	1,	1,	4,	2,	33,	59,	11,	15,	10,	0,	3,	0,	5,	1,	0,	2,	2,	5,	0,	0,	3,	4,	1,	0,	0,	0,	0,	1,	0,	3,	6,	14,	5,	6,	10,	8,	2,	20,	8,	5,	169,	3,	8,	22,	1,	4,	2,	2,	11,	3,	0,	3,	0,	6,	5};
    //FLUORIDE_CO_73nt_M18_F
    //{1370,	299,	148,	55,	21,	0,	7,	0,	0,	34,	5,	1,	165,	24,	0,	13,	16,	0,	2,	4,	4,	42,	48,	12,	12,	23,	0,	0,	1,	4,	3,	0,	6,	1,	10,	0,	0,	5,	3,	1,	0,	0,	2,	0,	1,	1,	0,	10,	19,	1,	9,	12,	7,	6,	43,	16,	10,	213,	2,	18,	13,	1,	4,	2,	12,	33,	9,	0,	14,	4,	6,	55};
     
    //FLUORIDE_CO_73nt_M19_NF
    //{16949,	4781,	1801,	728,	378,	18,	101,	27,	48,	528,	147,	15,	200,	452,	32,	238,	274,	7,	40,	110,	146,	694,	721,	208,	275,	306,	25,	184,	29,	131,	152,	57,	92,	135,	300,	26,	51,	254,	149,	217,	19,	14,	335,	6,	584,	116,	6,	76,	139,	20,	41,	95,	34,	39,	186,	76,	43,	931,	5,	65,	86,	1,	12,	0,	5,	25,	13,	0,	2,	1,	12,	12	};
    //FLUORIDE_CO_73nt_M19_F
    //{22179,	5603,	3753,	936,	430,	12,	107,	25,	51,	907,	135,	15,	131,	307,	24,	249,	343,	6,	15,	82,	86,	1185,	1287,	291,	334,	409,	12,	111,	11,	71,	79,	26,	90,	91,	220,	20,	39,	194,	110,	213,	18,	4,	314,	9,	313,	93,	3,	35,	108,	8,	17,	55,	14,	26,	169,	50,	24,	679,	10,	49,	59,	7,	5,	7,	5,	14,	6,	0,	3,	3,	9,	7};
     
    //FLUORIDE_CO_73nt_M20_NF
    //{11477,	3309,	1982,	454,	280,	8,	71,	17,	41,	526,	140,	20,	101,	162,	38,	157,	198,	11,	41,	122,	129,	706,	718,	193,	230,	299,	4,	81,	11,	52,	86,	20,	51,	64,	185,	26,	39,	163,	124,	249,	20,	6,	82,	11,	50,	24,	17,	62,	87,	13,	40,	96,	78,	44,	196,	47,	34,	462,	11,	62,	74,	9,	23,	2,	16,	38,	13,	1,	59,	1,	18,	9	};
    //FLUORIDE_CO_73nt_M20_F
    //{10921,	3407,	2281,	488,	422,	10,	78,	29,	37,	600,	144,	18,	106,	198,	22,	147,	235,	19,	40,	117,	103,	682,	352,	171,	219,	297,	25,	116,	18,	86,	78,	41,	91,	83,	348,	25,	37,	184,	258,	250,	26,	6,	98,	7,	74,	29,	8,	55,	116,	26,	36,	164,	86,	49,	230,	64,	48,	673,	14,	100,	99,	4,	25,	5,	15,	44,	34,	2,	75,	2,	16,	15};
     
    //FLUORIDE_CO_73nt_M21_NF
    //{33535,	8409,	3620,	1606,	769,	24,	226,	56,	82,	1041,	410,	44,	3263,	590,	84,	364,	416,	12,	78,	158,	165,	1638,	2144,	499,	653,	674,	47,	263,	41,	137,	166,	71,	191,	235,	490,	49,	69,	394,	272,	358,	28,	13,	558,	7,	841,	128,	6,	109,	220,	37,	64,	105,	46,	49,	288,	104,	29,	768,	15,	49,	103,	4,	9,	2,	1,	17,	8,	0,	2,	3,	15,	13};
    //FLUORIDE_CO_73nt_M21_F
    //{42530,	10559,	3866,	2235,	1240,	40,	303,	77,	104,	1178,	485,	79,	3861,	942,	99,	416,	536,	16,	78,	213,	187,	1784,	2553,	567,	763,	687,	55,	393,	48,	172,	268,	74,	255,	259,	621,	66,	70,	515,	292,	467,	62,	21,	642,	24,	1136,	166,	19,	113,	283,	37,	55,	189,	77,	53,	340,	142,	49,	1198,	14,	97,	198,	6,	23,	1,	4,	39,	13,	1,	9,	6,	14,	14};
     
    //FLUORIDE_CO_73nt_M22_NF
    //{2658,	900,	476,	200,	156,	2,	20,	9,	12,	123,	37,	6,	22,	46,	5,	33,	42,	5,	12,	27,	20,	116,	125,	47,	39,	52,	3,	26,	8,	10,	13,	4,	11,	9,	59,	3,	1,	26,	16,	18,	1,	0,	24,	0,	71,	41,	4,	28,	42,	9,	25,	69,	41,	33,	108,	19,	35,	575,	7,	43,	52,	6,	10,	6,	40,	91,	13,	2,	50,	0,	21,	13};
    //FLUORIDE_CO_73nt_M22_F
    //{5008,	1426,	961,	199,	138,	6,	44,	17,	18,	242,	56,	7,	38,	69,	3,	50,	77,	1,	12,	28,	24,	189,	128,	58,	62,	122,	3,	29,	3,	9,	19,	2,	16,	9,	37,	4,	2,	25,	18,	17,	0,	0,	45,	2,	101,	80,	4,	40,	91,	31,	41,	138,	108,	51,	224,	49,	39,	488,	14,	100,	106,	6,	38,	18,	68,	204,	23,	2,	107,	5,	25,	21	};
    
    //FLUORIDE_CO_73nt_M23_NF
    //{3246,	935,	540,	200,	123,	7,	25,	4,	16,	130,	58,	5,	160,	67,	6,	32,	58,	2,	6,	16,	22,	167,	58,	32,	44,	55,	1,	15,	2,	8,	8,	4,	14,	13,	39,	1,	1,	22,	9,	5,	3,	0,	25,	1,	45,	43,	7,	26,	60,	17,	26,	89,	46,	26,	120,	45,	25,	490,	14,	62,	81,	6,	25,	13,	43,	145,	21,	2,	51,	1,	18,	16};
    //FLUORIDE_CO_73nt_M23_F
    //{13858,	3727,	2619,	734,	630,	27,	124,	37,	53,	507,	160,	27,	823,	216,	36,	133,	145,	5,	24,	72,	83,	615,	476,	169,	184,	251,	16,	74,	6,	37,	21,	7,	38,	29,	191,	7,	7,	33,	52,	27,	2,	1,	91,	4,	254,	162,	11,	105,	256,	82,	111,	390,	248,	157,	535,	114,	141,	1311,	40,	189,	195,	15,	65,	57,	242,	756,	89,	14,	406,	11,	58,	56};
   
  
  
    ////////////////////////////////////    EQUILIBRIUM DATA   //////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
   
    
    //FLUORIDE_EQ_55nt_NF
    //{1949,	500,	208,	119,	69,	1,	11,	3,	5,	66,	23,	1,	22,	34,	3,	11,	30,	2,	0,	22,	14,	150,	137,	28,	40,	48,	3,	14,	2,	14,	11,	7,	11,	9,	24,	1,	3,	20,	7,	31,	3,	3,	2,	0,	5,	0,	0,	2,	1,	0,	0,	67,	0,	0};
    //FLUORIDE_EQ_55nt_F
    //{1205,	254,	109,	56,	32,	2,	9,	0,	3,	41,	10,	0,	15,	26,	2,	12,	21,	0,	1,	29,	14,	71,	77,	18,	31,	32,	0,	5,	0,	7,	16,	4,	15,	8,	13,	1,	2,	15,	6,	11,	0,	0,	3,	0,	2,	0,	0,	0,	0,	1,	2,	71,	0,	0};
    
    //FLUORIDE_EQ_56nt_NF
    //{2081,	621,	279,	146,	82,	2,	16,	4,	13,	97,	26,	2,	16,	53,	1,	18,	32,	1,	3,	18,	11,	117,	76,	22,	45,	43,	1,	11,	1,	13,	11,	9,	7,	14,	13,	2,	7,	16,	5,	16,	2,	0,	1,	0,	6,	0,	0,	0,	5,	1,	2,	2,	1,	0,	0};
    //FLUORIDE_EQ_56nt_F
    //{1445,	360,	134,	68,	50,	2,	8,	2,	2,	38,	24,	1,	14,	26,	2,	18,	23,	0,	3,	22,	17,	74,	51,	21,	19,	35,	2,	8,	3,	7,	9,	3,	11,	6,	12,	1,	2,	10,	3,	13,	0,	2,	3,	0,	11,	1,	1,	0,	3,	1,	0,	2,	1,	0,	0};
    
    //FLUORIDE_EQ_57nt_NF
    //{1738,	561,	230,	142,	69,	4,	13,	5,	13,	67,	22,	2,	24,	46,	1,	20,	23,	0,	5,	19,	11,	145,	90,	22,	35,	37,	1,	15,	0,	7,	7,	1,	15,	13,	19,	2,	4,	12,	6,	10,	0,	1,	0,	0,	5,	0,	0,	1,	2,	0,	1,	2,	0,	7,	0,	0};
    //FLUORIDE_EQ_57nt_F
    //{1226,	322,	145,	62,	40,	1,	9,	4,	6,	32,	17,	1,	13,	35,	1,	13,	21,	0,	1,	8,	23,	93,	35,	14,	27,	24,	2,	9,	4,	11,	12,	3,	5,	8,	8,	0,	5,	18,	11,	18,	0,	0,	0,	0,	4,	0,	0,	1,	2,	0,	1,	1,	2,	9,	0,	0	};
    
    //FLUORIDE_EQ_58nt_NF
    //{1154,	336,	117,	68,	37,	1,	11,	3,	2,	52,	16,	0,	8,	26,	4,	16,	21,	0,	1,	16,	9,	74,	63,	17,	33,	35,	2,	5,	1,	6,	10,	3,	8,	5,	17,	0,	3,	8,	7,	13,	0,	0,	3,	0,	3,	0,	0,	0,	1,	0,	0,	2,	0,	1,	12,	0,	0};
    //FLUORIDE_EQ_58nt_F
    //{802,	231,	84,	34,	20,	2,	7,	1,	3,	17,	6,	1,	7,	27,	0,	11,	20,	0,	2,	12,	5,	42,	41,	8,	14,	22,	1,	4,	2,	4,	5,	3,	5,	3,	4,	0,	1,	4,	4,	8,	1,	0,	1,	0,	2,	0,	0,	1,	3,	0,	0,	1,	0,	0,	14,	0,	0};
    
    //FLUORIDE_EQ_59nt_NF
    //{3279,	1027,	461,	237,	115,	1,	26,	6,	12,	149,	59,	3,	33,	97,	6,	47,	83,	2,	5,	44,	25,	298,	245,	64,	109,	140,	4,	39,	5,	36,	30,	12,	24,	34,	41,	3,	14,	50,	25,	73,	7,	1,	24,	1,	13,	2,	0,	5,	13,	0,	2,	3,	0,	0,	5,	0,	0,	0};
    //FLUORIDE_EQ_59nt_F
    //{2209,	623,	234,	124,	55,	2,	26,	4,	11,	80,	19,	2,	44,	65,	5,	44,	49,	0,	6,	37,	32,	190,	163,	44,	77,	70,	5,	29,	2,	28,	16,	13,	24,	18,	28,	1,	7,	37,	15,	62,	2,	3,	6,	1,	18,	1,	0,	3,	8,	0,	0,	2,	0,	1,	2,	0,	0,	0};
    
    //FLUORIDE_EQ_60nt_NF
    //{9921,	3102,	1111,	634,	351,	7,	62,	16,	30,	360,	126,	5,	89,	226,	12,	79,	130,	8,	13,	83,	71,	525,	395,	123,	201,	214,	9,	76,	9,	44,	69,	11,	44,	42,	101,	11,	13,	70,	34,	87,	14,	9,	30,	2,	186,	16,	1,	7,	48,	1,	11,	8,	3,	5,	18,	0,	0,	0,	0};
    //FLUORIDE_EQ_60nt_F
    //{8733,	2345,	919,	395,	236,	9,	58,	10,	16,	258,	74,	8,	64,	188,	12,	92,	80,	4,	14,	82,	82,	350,	296,	109,	154,	168,	13,	70,	17,	35,	51,	18,	35,	30,	65,	10,	10,	53,	28,	66,	5,	5,	23,	0,	142,	18,	2,	8,	17,	2,	4,	6,	2,	3,	13,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_61nt_NF
    //{2539,	854,	318,	180,	86,	2,	15,	4,	10,	114,	35,	1,	16,	33,	1,	30,	30,	2,	3,	25,	17,	173,	144,	45,	71,	81,	3,	27,	4,	25,	13,	8,	16,	14,	40,	1,	6,	34,	15,	61,	1,	2,	8,	0,	10,	1,	0,	3,	9,	1,	0,	3,	0,	1,	4,	1,	0,	8,	0,	0};
    //FLUORIDE_EQ_61nt_F
    //{1670,	495,	191,	67,	53,	1,	8,	4,	2,	50,	13,	2,	14,	26,	3,	21,	28,	3,	5,	14,	17,	79,	69,	26,	41,	51,	0,	13,	2,	15,	21,	2,	15,	10,	24,	1,	2,	22,	5,	24,	2,	3,	6,	0,	11,	2,	0,	3,	4,	0,	0,	6,	1,	0,	4,	1,	0,	12,	0,	0};
    
    //FLUORIDE_EQ_62nt_NF
    //{4021,	1275,	519,	273,	149,	6,	28,	14,	10,	186,	59,	5,	55,	109,	8,	47,	61,	2,	4,	47,	50,	323,	236,	76,	141,	130,	5,	48,	7,	40,	53,	7,	23,	25,	41,	5,	14,	92,	34,	87,	7,	3,	11,	0,	30,	4,	0,	12,	17,	1,	3,	3,	0,	0,	17,	3,	1,	5,	0,	0,	0};
    //FLUORIDE_EQ_62nt_F
    //{2933,	820,	301,	172,	80,	6,	19,	7,	9,	93,	29,	2,	32,	55,	7,	38,	46,	0,	7,	39,	37,	202,	135,	40,	75,	82,	2,	37,	2,	33,	63,	13,	31,	19,	24,	1,	21,	41,	19,	68,	7,	2,	12,	1,	16,	2,	1,	4,	17,	0,	1,	4,	0,	1,	9,	1,	0,	3,	0,	0,	0};
    
    //FLUORIDE_EQ_63nt_NF
    //{2907,	928,	352,	199,	120,	6,	26,	10,	12,	129,	38,	5,	29,	100,	6,	30,	67,	2,	6,	31,	37,	210,	200,	42,	100,	100,	4,	43,	2,	40,	51,	20,	22,	36,	68,	7,	11,	39,	36,	79,	8,	2,	9,	0,	14,	3,	0,	2,	15,	1,	4,	8,	0,	1,	12,	2,	2,	3,	0,	63,	0,	0};
    //FLUORIDE_EQ_63nt_F
    //{2052,	525,	187,	99,	48,	4,	14,	4,	8,	72,	19,	1,	29,	59,	4,	34,	39,	1,	4,	40,	22,	107,	110,	35,	44,	62,	3,	17,	4,	28,	28,	7,	24,	18,	45,	8,	15,	31,	26,	49,	8,	3,	11,	0,	13,	2,	2,	3,	10,	1,	0,	5,	1,	1,	6,	1,	1,	5,	3,	38,	0,	0};
    
    //FLUORIDE_EQ_64nt_NF
    //{1179,	363,	183,	81,	49,	1,	7,	5,	3,	68,	21,	1,	16,	58,	1,	16,	31,	0,	3,	16,	9,	81,	55,	23,	32,	39,	1,	25,	2,	13,	19,	8,	28,	8,	46,	4,	4,	27,	10,	37,	2,	1,	6,	1,	4,	0,	0,	2,	6,	0,	1,	6,	0,	0,	1,	1,	0,	3,	0,	4,	0,	0,	0};
    //FLUORIDE_EQ_64nt_F
    //{769,	202,	98,	41,	21,	0,	7,	2,	4,	25,	14,	2,	8,	39,	3,	15,	16,	0,	4,	5,	8,	62,	40,	27,	12,	19,	0,	9,	1,	12,	12,	9,	12,	7,	29,	1,	3,	14,	12,	27,	1,	1,	5,	1,	5,	2,	0,	3,	4,	0,	1,	3,	1,	0,	1,	0,	0,	1,	0,	1,	0,	0,	0};
    
    //FLUORIDE_EQ_65nt_NF
    //{2595,	760,	325,	166,	100,	4,	14,	4,	12,	101,	35,	1,	22,	46,	5,	27,	50,	0,	6,	23,	21,	164,	135,	40,	67,	71,	5,	30,	1,	28,	37,	6,	28,	15,	63,	2,	7,	44,	24,	51,	4,	1,	4,	0,	5,	0,	1,	1,	5,	1,	0,	5,	0,	1,	6,	1,	0,	8,	0,	0,	0,	0,	0,	0};
    //FLUORIDE_EQ_65nt_F
    //{1829,	489,	182,	92,	46,	0,	16,	3,	12,	52,	20,	5,	21,	40,	0,	19,	25,	1,	5,	24,	21,	108,	73,	26,	41,	41,	0,	14,	3,	15,	31,	7,	14,	10,	22,	1,	10,	23,	17,	34,	2,	4,	9,	0,	4,	2,	0,	1,	3,	0,	0,	1,	0,	1,	4,	1,	1,	2,	0,	1,	0,	0,	0,	0	};
    
    //FLUORIDE_EQ_66nt_NF
    //{4566,	1323,	557,	326,	153,	8,	36,	13,	22,	181,	67,	8,	61,	160,	11,	71,	92,	1,	4,	55,	59,	332,	316,	71,	141,	146,	8,	79,	6,	54,	61,	24,	53,	49,	130,	6,	13,	95,	54,	104,	6,	1,	18,	0,	5,	3,	2,	4,	19,	1,	7,	5,	1,	1,	7,	2,	0,	17,	0,	0,	4,	1,	15,	2,	0};
    //FLUORIDE_EQ_66nt_F
    //{3128,	826,	311,	165,	72,	1,	19,	8,	11,	113,	40,	5,	42,	113,	8,	49,	63,	2,	6,	41,	40,	193,	160,	53,	95,	79,	7,	57,	4,	25,	55,	14,	32,	28,	99,	6,	16,	60,	35,	62,	7,	3,	9,	0,	3,	5,	2,	1,	6,	4,	4,	1,	2,	2,	3,	3,	0,	3,	0,	1,	1,	1,	16,	0,	0};
    
    //FLUORIDE_EQ_67nt_NF
    //{96,	30,	5,	9,	6,	0,	0,	0,	2,	3,	3,	0,	2,	7,	0,	2,	1,	0,	0,	2,	0,	7,	13,	1,	7,	9,	0,	1,	0,	3,	5,	2,	4,	2,	9,	0,	0,	1,	4,	7,	1,	0,	0,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	2,	0,	0,	0,	0,	0,	0,	0,	0};
    //FLUORIDE_EQ_67nt_F
    //{58,	12,	10,	5,	0,	0,	0,	0,	0,	6,	2,	0,	3,	1,	0,	2,	0,	0,	0,	1,	0,	4,	3,	0,	3,	2,	0,	4,	1,	3,	1,	1,	0,	5,	14,	2,	1,	1,	2,	6,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	0,	0,	0,	0,	1,	0,	0,	1,	0,	0,	1,	0,	0};
    
    //FLUORIDE_EQ_68nt_NF
    //{679,	168,	80,	35,	27,	0,	5,	1,	3,	24,	9,	1,	4,	14,	1,	10,	7,	0,	2,	15,	8,	33,	17,	18,	10,	15,	1,	8,	1,	16,	18,	1,	6,	4,	26,	1,	2,	9,	5,	9,	2,	0,	1,	0,	3,	1,	0,	1,	1,	0,	0,	2,	1,	0,	3,	0,	0,	5,	0,	0,	0,	0,	0,	0,	1,	0,	0};
    //FLUORIDE_EQ_68nt_F
    //{419,	110,	44,	25,	17,	0,	4,	0,	5,	17,	5,	0,	5,	9,	1,	8,	10,	0,	0,	14,	2,	26,	15,	10,	7,	14,	0,	7,	1,	6,	10,	2,	2,	5,	18,	0,	2,	3,	0,	8,	0,	0,	1,	0,	1,	1,	0,	0,	0,	0,	1,	0,	0,	0,	0,	0,	0,	3,	0,	0,	0,	0,	0,	0,	1,	0,	0};
    
    //FLUORIDE_EQ_69nt_NF
    //{2871,	845,	312,	151,	105,	3,	14,	1,	3,	90,	39,	3,	24,	42,	4,	21,	30,	2,	8,	32,	16,	136,	92,	28,	57,	54,	4,	23,	1,	14,	18,	3,	7,	12,	37,	1,	5,	22,	11,	26,	0,	1,	7,	0,	1,	0,	0,	1,	2,	0,	3,	1,	1,	0,	3,	0,	0,	7,	0,	0,	5,	1,	2,	0,	0,	0,	0,	0};
    //FLUORIDE_EQ_69nt_F
    //{2301,	568,	196,	79,	49,	4,	10,	5,	2,	52,	14,	1,	24,	30,	4,	15,	33,	1,	1,	19,	18,	89,	69,	22,	32,	37,	1,	13,	2,	6,	16,	0,	11,	5,	18,	1,	1,	19,	12,	28,	1,	0,	3,	0,	0,	0,	1,	1,	3,	0,	0,	1,	0,	5,	2,	2,	0,	6,	0,	1,	0,	0,	0,	0,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_70nt_NF
    //{2798,	849,	290,	149,	68,	1,	22,	5,	6,	80,	26,	3,	27,	59,	3,	18,	44,	0,	2,	25,	15,	120,	153,	18,	44,	43,	4,	26,	0,	8,	9,	4,	19,	10,	23,	3,	2,	27,	14,	28,	2,	0,	5,	0,	3,	0,	0,	0,	0,	1,	2,	4,	0,	2,	12,	0,	2,	20,	0,	0,	2,	0,	1,	0,	2,	0,	0,	0,	0};
    //FLUORIDE_EQ_70nt_F
    //{2199,	634,	215,	95,	50,	4,	9,	3,	5,	60,	13,	1,	30,	41,	2,	16,	26,	4,	3,	19,	8,	91,	110,	17,	39,	29,	1,	19,	1,	10,	12,	5,	6,	7,	17,	0,	2,	14,	7,	12,	2,	0,	2,	0,	2,	0,	3,	1,	3,	0,	3,	3,	1,	0,	5,	6,	0,	16,	0,	3,	0,	0,	0,	2,	0,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_71nt_NF
    //{2160,	572,	200,	109,	66,	1,	11,	4,	11,	73,	21,	1,	18,	41,	2,	12,	19,	0,	1,	23,	9,	89,	97,	14,	36,	40,	4,	15,	0,	8,	7,	2,	7,	3,	12,	0,	0,	13,	4,	9,	0,	0,	0,	0,	1,	0,	0,	0,	4,	1,	2,	2,	1,	0,	12,	4,	1,	15,	0,	1,	1,	0,	0,	0,	0,	0,	0,	0,	0,	0};
    //FLUORIDE_EQ_71nt_F
    //{2072,	527,	177,	78,	52,	1,	11,	4,	8,	45,	14,	1,	13,	28,	2,	13,	22,	1,	2,	18,	9,	73,	83,	8,	28,	27,	2,	8,	1,	4,	6,	4,	5,	3,	10,	0,	1,	9,	6,	8,	0,	0,	0,	0,	1,	0,	0,	0,	4,	1,	0,	2,	2,	5,	4,	2,	0,	8,	1,	1,	4,	0,	0,	0,	0,	0,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_72nt_NF
    //{3074,	945,	297,	196,	101,	2,	25,	8,	7,	108,	51,	2,	25,	47,	5,	30,	48,	1,	1,	19,	15,	83,	94,	27,	49,	74,	3,	11,	2,	6,	7,	3,	4,	11,	16,	1,	1,	13,	3,	6,	0,	0,	6,	0,	3,	4,	1,	1,	7,	6,	5,	6,	8,	4,	31,	9,	6,	94,	1,	4,	13,	1,	0,	1,	1,	5,	2,	0,	0,	0,	0};
    //FLUORIDE_EQ_72nt_F
    //{3004,	788,	264,	124,	61,	1,	14,	8,	8,	74,	30,	2,	23,	53,	9,	30,	38,	1,	1,	15,	13,	82,	78,	28,	22,	48,	1,	10,	0,	9,	6,	3,	2,	2,	14,	0,	0,	7,	3,	1,	0,	0,	3,	0,	5,	1,	0,	3,	5,	3,	1,	4,	1,	4,	18,	5,	3,	34,	0,	3,	2,	0,	2,	0,	2,	8,	2,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_73nt_NF
    //{2686,	816,	279,	154,	91,	1,	8,	3,	12,	73,	34,	0,	31,	59,	1,	18,	26,	1,	2,	29,	18,	116,	81,	20,	50,	38,	3,	14,	2,	7,	2,	1,	10,	8,	15,	0,	2,	7,	8,	17,	0,	0,	3,	0,	0,	0,	0,	4,	8,	1,	4,	1,	3,	2,	18,	5,	2,	37,	1,	2,	8,	0,	0,	0,	0,	1,	1,	0,	0,	5,	0,	0};
    //FLUORIDE_EQ_73nt_F
    //{2525,	797,	216,	110,	81,	1,	11,	3,	5,	52,	25,	0,	21,	48,	1,	19,	27,	1,	2,	19,	14,	75,	65,	12,	29,	38,	0,	7,	1,	7,	8,	2,	5,	7,	13,	2,	0,	13,	6,	8,	0,	0,	1,	0,	1,	0,	0,	2,	1,	1,	2,	1,	1,	4,	11,	1,	1,	17,	0,	1,	0,	0,	0,	0,	0,	2,	1,	1,	0,	3,	0,	0};
    
    //FLUORIDE_EQ_74nt_NF
    //{6801,	2118,	655,	346,	210,	8,	27,	6,	17,	180,	76,	6,	64,	116,	6,	43,	67,	2,	8,	48,	30,	224,	262,	66,	83,	94,	3,	40,	2,	21,	18,	4,	14,	13,	39,	1,	6,	20,	8,	20,	1,	0,	4,	0,	4,	2,	2,	0,	16,	0,	6,	13,	6,	6,	41,	9,	4,	73,	0,	1,	3,	1,	0,	1,	0,	2,	8,	1,	5,	1,	6,	0,	0};
    //FLUORIDE_EQ_74nt_F
    //{7401,	2124,	650,	294,	147,	5,	47,	12,	20,	153,	75,	5,	71,	133,	7,	41,	32,	0,	6,	33,	28,	194,	186,	46,	68,	56,	2,	35,	3,	24,	21,	4,	12,	10,	25,	0,	3,	14,	14,	13,	2,	0,	4,	0,	4,	0,	0,	3,	7,	1,	3,	4,	1,	3,	17,	5,	2,	24,	0,	2,	1,	0,	1,	0,	0,	11,	10,	1,	3,	5,	11,	0,	0};
    
    //FLUORIDE_EQ_75nt_NF
    //{5622,	1605,	520,	286,	171,	2,	35,	12,	5,	148,	70,	3,	35,	119,	7,	41,	71,	1,	4,	40,	15,	172,	242,	44,	81,	86,	2,	41,	2,	15,	12,	1,	17,	14,	44,	1,	2,	21,	11,	17,	0,	0,	4,	0,	0,	2,	0,	4,	19,	2,	2,	5,	6,	5,	43,	10,	3,	60,	1,	4,	9,	0,	3,	0,	1,	2,	5,	1,	2,	4,	5,	0,	0,	0};
    //FLUORIDE_EQ_75nt_F
    //{5550,	1531,	471,	183,	110,	3,	24,	3,	15,	115,	44,	2,	51,	85,	5,	40,	61,	3,	6,	40,	26,	173,	200,	44,	80,	54,	2,	31,	3,	11,	8,	5,	15,	9,	17,	1,	2,	14,	10,	14,	0,	0,	3,	0,	2,	1,	0,	1,	10,	0,	2,	3,	2,	4,	14,	6,	0,	23,	0,	2,	6,	0,	1,	0,	0,	4,	6,	1,	7,	5,	6,	0,	0,	0};
    
    //FLUORIDE_EQ_76nt_NF
    //{3700,	1025,	401,	164,	109,	2,	16,	3,	5,	109,	41,	1,	37,	86,	3,	28,	42,	1,	5,	30,	22,	119,	137,	29,	53,	57,	3,	22,	0,	19,	14,	2,	11,	6,	27,	1,	3,	14,	7,	8,	1,	1,	3,	0,	8,	2,	0,	3,	12,	3,	3,	12,	8,	3,	30,	12,	4,	57,	0,	4,	10,	0,	1,	0,	1,	1,	1,	0,	0,	0,	6,	0,	0,	0,	0};
    //FLUORIDE_EQ_76nt_F
    //{4203,	1091,	325,	172,	100,	4,	15,	4,	10,	74,	35,	2,	30,	80,	4,	27,	37,	0,	5,	25,	15,	112,	148,	29,	34,	54,	1,	31,	2,	7,	16,	3,	9,	4,	27,	4,	0,	14,	9,	6,	1,	0,	3,	0,	3,	2,	0,	3,	8,	1,	4,	3,	2,	3,	27,	5,	2,	23,	1,	0,	4,	0,	1,	0,	0,	6,	1,	0,	0,	4,	14,	0,	0,	0,	0};
    
    //FLUORIDE_EQ_77nt_NF
    //{5268,	1482,	529,	262,	174,	2,	27,	9,	5,	164,	64,	3,	45,	104,	9,	43,	70,	2,	7,	41,	22,	211,	233,	46,	98,	79,	2,	46,	4,	22,	22,	3,	13,	12,	39,	4,	2,	13,	16,	12,	0,	0,	5,	0,	7,	3,	0,	5,	19,	3,	5,	12,	3,	6,	69,	12,	5,	124,	2,	6,	11,	0,	2,	1,	1,	10,	4,	0,	1,	1,	10,	27,	1,	54,	65,	0};
    //FLUORIDE_EQ_77nt_F
    //{5133,	1411,	435,	193,	131,	2,	23,	9,	14,	142,	43,	5,	42,	113,	4,	48,	78,	0,	4,	31,	19,	168,	227,	41,	76,	58,	3,	31,	2,	16,	16,	4,	10,	16,	24,	2,	4,	30,	7,	14,	0,	0,	4,	0,	3,	5,	3,	2,	9,	0,	4,	15,	5,	1,	40,	5,	5,	44,	1,	5,	4,	0,	1,	0,	2,	22,	6,	0,	1,	3,	19,	49,	3,	40,	71,	0};
    
    //FLUORIDE_EQ_78nt_NF
    //{5116,	1542,	539,	301,	200,	8,	30,	11,	13,	143,	81,	1,	39,	111,	4,	41,	86,	0,	8,	38,	35,	220,	287,	59,	121,	123,	5,	52,	2,	26,	20,	2,	15,	18,	73,	1,	4,	54,	12,	12,	0,	2,	6,	1,	6,	2,	1,	8,	24,	3,	11,	20,	10,	7,	65,	8,	6,	177,	0,	13,	14,	1,	1,	0,	3,	9,	9,	0,	2,	3,	10,	36,	10,	14,	87,	0,	0};
    //FLUORIDE_EQ_78nt_F
    //{5559,	1451,	494,	270,	146,	6,	33,	11,	15,	178,	55,	6,	63,	132,	6,	46,	77,	1,	4,	45,	33,	201,	256,	52,	96,	74,	3,	52,	8,	24,	26,	9,	15,	15,	59,	2,	2,	39,	22,	20,	0,	0,	4,	1,	2,	2,	1,	5,	13,	1,	7,	14,	6,	2,	47,	9,	3,	57,	1,	4,	4,	0,	2,	0,	2,	14,	13,	0,	1,	3,	16,	50,	8,	14,	66,	0,	0};
    
    //FLUORIDE_EQ_79nt_NF
    //{8129,	2363,	820,	465,	312,	11,	54,	15,	26,	275,	113,	3,	93,	227,	16,	73,	142,	4,	8,	73,	61,	428,	592,	99,	234,	184,	8,	93,	12,	35,	37,	10,	36,	22,	98,	11,	7,	39,	14,	27,	0,	0,	7,	1,	14,	5,	4,	14,	42,	6,	22,	54,	14,	15,	210,	28,	17,	340,	6,	23,	57,	0,	5,	3,	6,	18,	8,	0,	6,	5,	6,	57,	13,	43,	71,	0,	0,	0};
    //FLUORIDE_EQ_79nt_F
    //{8979,	2356,	709,	390,	221,	9,	52,	13,	29,	318,	125,	7,	107,	247,	11,	84,	149,	2,	19,	67,	71,	375,	592,	75,	198,	150,	8,	78,	7,	32,	45,	8,	34,	31,	87,	2,	6,	46,	13,	19,	4,	0,	9,	0,	14,	7,	6,	18,	35,	2,	23,	35,	22,	16,	120,	22,	14,	123,	1,	10,	13,	0,	2,	3,	6,	21,	8,	0,	17,	6,	26,	106,	16,	39,	65,	0,	0,	0};
    
    //FLUORIDE_EQ_80nt_NF
    //{11926,	3641,	1412,	866,	572,	19,	120,	27,	45,	625,	273,	18,	252,	661,	43,	192,	242,	12,	27,	191,	169,	794,	755,	173,	382,	336,	10,	151,	15,	94,	123,	11,	85,	79,	269,	12,	16,	216,	74,	76,	3,	1,	21,	3,	84,	28,	19,	77,	194,	33,	89,	152,	80,	74,	702,	143,	49,	1299,	22,	76,	167,	6,	20,	5,	19,	53,	35,	3,	41,	24,	27,	138,	32,	124,	195,	0,	0,	0,	0};
    //FLUORIDE_EQ_80nt_F
    //{12652,	3667,	1387,	771,	435,	20,	144,	43,	77,	596,	291,	25,	336,	768,	44,	244,	293,	4,	48,	255,	202,	787,	711,	161,	362,	324,	20,	199,	20,	93,	141,	34,	98,	64,	274,	13,	14,	168,	76,	60,	4,	0,	27,	0,	42,	19,	12,	44,	131,	24,	62,	109,	47,	42,	416,	77,	32,	452,	11,	57,	47,	1,	19,	7,	18,	79,	49,	2,	94,	41,	58,	232,	63,	172,	299,	0,	0,	0,	0};

    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////    CANDIDATE STRUCTURES  ///////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    //Read files & get unique folds & get indices of dominant folds
    int FoldsNum = 0;
    vector<vector<bool>>Folds;//from 3' to 5'
    int SampleSize = basicFoldNums+AddFold;//change
    string FileName = Folder + RNAname+".txt";
    ConstructFolds(FileName, RNALen, SampleSize, Folds, FoldsNum);//Folds from 3' to 5'
    
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////    BETA & GAMMA & ETA ESTIMATION  //////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    //Order: beta and gama here are from 3' to 5'
    vector<double>SEQbetaest(RNALenNNLS-1,0);//remove the last two nucleotide
    vector<double>SEQgamaest(RNALenNNLS-1,0);
    vector<double>SEQRate_Plus(RNALenNNLS-1,0);
    for(int i = 0; i<RNALenNNLS-1; ++i)
    {
        //Must have complete reads
        double tempX = (double)accumulate(SEQPlusReads.begin(), SEQPlusReads.begin()+i+2, 0);
        double tempY = (double)accumulate(SEQMinusReads.begin(), SEQMinusReads.begin()+i+2, 0);
        SEQgamaest[RNALenNNLS-1-i-1] = double(SEQMinusReads[i+1])/tempY;
        SEQRate_Plus[RNALenNNLS-1-i-1] = double(SEQPlusReads[i+1])/tempX;
        SEQbetaest[RNALenNNLS-1-i-1] = (SEQRate_Plus[RNALenNNLS-1-i-1]-SEQgamaest[RNALenNNLS-1-i-1])/(1-SEQgamaest[RNALenNNLS-1-i-1]);
        if(SEQgamaest[RNALenNNLS-1-i-1]<0) SEQgamaest[RNALenNNLS-1-i-1]=0;
        if(SEQbetaest[RNALenNNLS-1-i-1]<0) SEQbetaest[RNALenNNLS-1-i-1]=0;
    }
    myfilew.open (Folder+RNAname+"SEQProfile.txt");
    for(int i = 0; i<RNALenNNLS-1;++i)
        myfilew<<SEQbetaest[i]<<"   ";
    myfilew.close();

    //ETA
    double SEQetaest = 0.0;
    double betamean = mean(SEQbetaest);
    vector<double>SEQbetasort(SEQbetaest);
    sort(SEQbetasort.begin(),SEQbetasort.end(),greater<double>());
    int stopidx = 0;
    for (int i = 0; i<RNALenNNLS-1; ++i)
    {
        if(SEQbetasort[i]<betamean)
        {
            stopidx = i;
            break;
        }
    }
    if(stopidx%2==0)
        SEQetaest = (SEQbetasort[stopidx*0.5]+SEQbetasort[stopidx*0.5-1])/2;
    else
        SEQetaest = SEQbetasort[(stopidx-1)*0.5];
    
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////    PRE-FILTERING STRUCTURES  ///////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    vector<vector<bool>>SEQFoldsReduce;
    vector<int>SEQFoldsReduceIdx;
    vector<int>opensite;
    vector<double>highbeta;
    for(int i = 0; i<RNALenNNLS-1; ++i)
        if(SEQbetaest[i]>SEQetaest)
        {
            opensite.push_back(i);
            highbeta.push_back(SEQbetaest[i]);
        }
    KickoutFolds(opensite,Folds, SEQFoldsReduce,SEQFoldsReduceIdx);//Ignore the last one, only
    
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////    CONSTRUCT DESIGN MATRIX  ////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    int SEQFoldsReduceNum = (int)SEQFoldsReduce.size();
    vector<vector<double>>SEQDSMatrix(RNALenNNLS,vector<double>(SEQFoldsReduceNum,0));
    ConstructDMSEQ_new(RNALenNNLS, SEQFoldsReduce, SEQetaest, SEQgamaest, SEQDSMatrix);
    
    
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    ////////////////////////////////////////////////    Y   /////////////////////////////////////////////
    /////////////////////////////////////////////////////////////////////////////////////////////////////
    vector<double>SEQResponse(RNALenNNLS,0);
    //from 3' to 5'
    for(int i = 0; i<RNALenNNLS; ++i)
        SEQResponse[i] = SEQPlusReads[RNALenNNLS-1-i];
    double ReadsNum = accumulate(SEQResponse.begin(), SEQResponse.end(), 0.0);
    for(int i = 0; i<RNALenNNLS; ++i)
        SEQResponse[i] = double(SEQResponse[i])/ReadsNum;
    
    
    
    //write Y
    myfilew.open (Folder+RNAname+"SEQResponse.txt");
    for(int i = 0; i<RNALenNNLS;++i)
        myfilew<<SEQResponse[i]<<"   ";
    myfilew.close();
    
    //Write Design Matrix
    myfilew.open(Folder+RNAname+"SEQDSMatrix.txt");
    for(int i = 0; i<RNALenNNLS; ++i)
        for(int j = 0; j<SEQFoldsReduceNum; ++j)
            myfilew<<SEQDSMatrix[i][j]<<"    ";
    myfilew.close();
    
    //Write para files
    myfilew.open(Folder+RNAname+"SEQpara.txt");
    myfilew<<RNALenNNLS<<"   ";
    myfilew<<SEQFoldsReduceNum<<"    ";
    for(int i = 0; i<SEQFoldsReduceNum; ++i)
        myfilew<<SEQFoldsReduceIdx[i]+1<<" ";
    myfilew.close();



    return 0;
}




 int ConstructDMSEQ_new(int RNALen, vector<vector<bool>>Folds,double etaest, vector<double>gamaest,vector<vector<double>>&DSMatrix)
 {
 int FoldsNum = (int)Folds.size();
 //with complete reads
 for (int k = St; k <= Ed+1; ++k)//change k is the position of termination (from 3' to 5'. st = 2) Ed+1 is no termination, complete reads
 {
 for (int c = 0; c < FoldsNum; ++c)
 {
 float tempsum_plus = 1;
 if(k <= Ed) //Prob(adduct on site k)
 {
 if(Folds[c][k] == 1)//folds must use k, since fold starts from 3' 0;
 tempsum_plus = 1-(1-gamaest[k-St])*(1-etaest);//gamaest use k-st, since gama is start from 3' 2;
 else
 tempsum_plus = gamaest[k-St];
 }
 for (int i = St; i < k; ++i) //Prob(no adducts on sites from 0 to k-1) //count from St
 {
 if (Folds[c][i] == 1)
 tempsum_plus = tempsum_plus*(1 - etaest)*(1 - gamaest[i-St]);
 else
 tempsum_plus = tempsum_plus*(1 - gamaest[i-St]);
 }
 DSMatrix[k-St][c] = tempsum_plus;
 }
 }
 
 return 0;
 }


//wrong one
int ConstructDMSEQ_old(int RNALen, vector<vector<bool>>Folds,double etaest, vector<double>gamaest,vector<vector<double>>&DSMatrix)
{
    int FoldsNum = (int)Folds.size();
    //with complete reads
    for (int k = 0; k < RNALen; ++k)//change k is the position of termination (from 3' to 5'. st = 2) Ed+1 is no termination, complete reads
    {
        for (int c = 0; c < FoldsNum; ++c)
        {
            float tempsum_plus = 1;
            if(k < RNALen-1) //Prob(adduct on site k)
            {
                if(Folds[c][k] == 1)//folds must use k, since fold starts from 3' 0;
                    tempsum_plus = 1-(1-gamaest[k])*(1-etaest);//gamaest use k-st, since gama is start from 3' 2;
                else
                    tempsum_plus = gamaest[k];
            }
            for (int i = 0; i < k; ++i) //Prob(no adducts on sites from 0 to k-1) //count from St
            {
                if (Folds[c][i] == 1)
                    tempsum_plus = tempsum_plus*(1 - etaest)*(1 - gamaest[i]);
                else
                    tempsum_plus = tempsum_plus*(1 - gamaest[i]);
            }
            DSMatrix[k][c] = tempsum_plus;
        }
    }
    
    return 0;
}

int KickoutFolds(vector<int> openidx,vector<vector<bool>>Folds,vector<vector<bool>>&FoldsReduce,vector<int>&FoldsReduceIdx)
{
    int FoldsNum = (int)Folds.size();
    for(int i = 0; i<FoldsNum-AddFold; ++i)//change
    {
        int count = 0;
        for(vector<int>::iterator it = openidx.begin(); it!=openidx.end(); ++it)
        {
            // if(Folds[i][(*it)+St]==0)//+2: folds 0~RNALen-1 (3' to 5'), beta 0~RNALen-2. beta is start form 3nd of 3' to 5'. The last two in 3is //deleted.
            //                break;
            // else
            //         ++count;
            
            if(Folds[i][(*it)+St]==1) ++count;
            
        }
        //if(count == openidx.size())
        if(count>openidx.size()*0.5)
        {
            FoldsReduce.push_back(Folds[i]);
            FoldsReduceIdx.push_back(i);
        }
    }
    for(int i = FoldsNum-AddFold; i<FoldsNum; ++i)
    {
        FoldsReduce.push_back(Folds[i]);
        FoldsReduceIdx.push_back(i);
    }
    
    return 0;
}


int ConstructFolds(string FileName, int RNALen, int SampleSize, vector<vector<bool>>&Folds, int&FoldsNum)
{
    ifstream myfile;
    myfile.open (FileName.c_str());
    char * dump = new char[6];
    char * Buffer = new char[RNALen];
    vector<bool> FoldsUnit(RNALen,0);//from 3' to 5'
    FoldsNum = 0;
    
    int dumpnum = 0;
    //Read Files, convert to 0,1 form, remain unique folds
    for(int i = 0; i<10; ++i)
    {
        myfile.read(dump,sizeof(char)*1);
        if(dump[0]=='('||dump[0]==')'||dump[0]=='.')
        {
            Buffer[0] = dump[0];
            myfile.read(&Buffer[1],sizeof(char)*(RNALen-1));
            if(i == 5) dumpnum = 1;
            if(i == 6) dumpnum = 2;
            break;
        }
    }
    myfile.read(dump,sizeof(char)*dumpnum);
    for(int j = 0; j<RNALen; ++j)
    {
        if(Buffer[j] == '.')
            FoldsUnit[RNALen-1-j] = 1;
        else
            FoldsUnit[RNALen-1-j] = 0;
    }
    Folds.push_back(FoldsUnit);
    ++FoldsNum;
    for(int i = 1; i<SampleSize; ++i)
    {
        bool flag = 0;
        myfile.read(Buffer,sizeof(char)*RNALen);
        myfile.read(dump,sizeof(char)*dumpnum);
        for(int j = 0; j<RNALen; ++j)
        {
            if(Buffer[j] == '.')
                FoldsUnit[RNALen-1-j] = 1;
            else if(Buffer[j] == '(' or Buffer[j] == ')')
                FoldsUnit[RNALen-1-j] = 0;
            else
                cout<<"Error!"<<endl;
        }
        for(int k = 0; k<FoldsNum; ++k)
        {
            if(Folds[k] == FoldsUnit)
            {
                
                flag = 1;
                break;
            }
        }
        if(flag == 0)
        {
            Folds.push_back(FoldsUnit);
            ++FoldsNum;
        }
    }
    myfile.close();
    delete []dump;
    delete []Buffer;
    return 0;
}



template<typename T>
double mean(vector<T>in)
{
    int len = (int)in.size();
    double sum = accumulate(in.begin(), in.end(), 0.0);
    return sum/len;
}





